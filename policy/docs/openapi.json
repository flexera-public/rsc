{
  "swagger": "2.0",
  "info": {
    "title": "RightScale Policy API",
    "description": "[RightScale Policies](https://docs.rightscale.com/policies) allow you to automate governance across your multi-cloud environment to increase agility and efficiency while managing risk for your organization. The Policies API allows you to manage policies on a per-project basis. The API exposes four resources which are described below: PolicyTemplate, AppliedPolicy, Incident, and PublishedTemplate.\n\nThe API is available at the following endpoints:\n* https://governance-3.rightscale.com/api/governance\n* https://governance-4.rightscale.com/api/governance\n* https://governance-10.rightscale.com/api/governance\n\nEach project (aka account) exists at only one of the endpoints above. The HTTP response for requests made to an endpoint\nthat does not contain the corresponding project uses status code 302 and returns a \"Location\" header that contains the correct URL\n\nNote that each resource in a policy template collection or a published template collection must have a unique name. The upload action on a policy template resource and\nthe create action on a published template resource returns conflict error when a resource with the given name already exists. The conflict response body indicates\nwhether the template can be overwritten with an update action.\n\nThe [OpenAPI specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) (version 2)\nfor this API is available [here](http://reference.rightscale.com/governance-policies/governance/front_service/master/swagger.json).\n\n## PolicyTemplate\n\nThe [PolicyTemplate](https://docs.rightscale.com/policies/#policy-engine-in-a-nutshell-basic-concepts) resource is a policy definition\nconsisting of [policy template language](https://docs.rightscale.com/policies/reference/policy_template_language.html) source code.\nThe language is an infrastructure-as-code style language designed to make it easy to poll arbitrary cloud resources and\ninitiate actions based on the resulting data.\n\n## AppliedPolicy\n\nThe [AppliedPolicy](https://docs.rightscale.com/policies/#policy-engine-in-a-nutshell-basic-concepts) resource is a running policy\nthat has been created from a policy template. An applied policy runs continuously (per frequency) until deleted.\nA single policy template can be used with various input parameters to create multiple applied policies.\n\n## Incident\n\nThe [Incident](https://docs.rightscale.com/policies/#policy-engine-in-a-nutshell-basic-concepts) resource is created when a condition\nof an applied policy is violated. If the policy validations all pass successfully then any associated existing incident is\nautomatically marked as resolved. An incident contains all of the information about the policy violation that triggered it\nas well as the current handling status ('triggered', 'resolved', 'terminated).\n\n## Archived Incident\n\nThe Archived Incident resource is an incident that is not in an actionable state for at least 30 days.\nAn incident is considered to be not actionable when it is in a terminated state or when it is in a resolved state with no pending actions\n\n## PublishedTemplate\n\nThe [PublishedTemplate](https://docs.rightscale.com/policies/#feature-overview-catalog) resource is a PolicyTemplate which has been\nmade available across all projects in your organization. These include both templates you've published as well as built-in\nRightScale templates.\n\n## PolicyAggregate\n\nThe [PolicyAggregate](https://docs.rightscale.com/policies/#feature-overview-catalog) resource is a single policy which has been\napplied for numerous projects across an an entire organization. PolicyAggregates must be applied from the templates published\nin the org-wide Catalog.\n\n## IncidentAggregate\n\nThe [IncidentAggregate](https://docs.rightscale.com/policies/#feature-overview-catalog) is a summarization of all incidents generated\nfrom a PolicyAggregate.\n\n## Auth\n\nRequests made to the API must be authenticated using a token obtained from the [Cloud Management API](http://docs.rightscale.com/api/general_usage.html#authentication).\nAn \"Api-Version\" header must also be set; the current version is \"1.0\".\n\nThe API actions below list privileges (aka security scopes) required to access that particular action. Privileges are granted by\nroles in the [user governance application](http://docs.rightscale.com/cm/ref/user_roles.html).\n\nThe following roles are unique to the Policies API. Except for policy_publisher, all roles can be granted for a single project or for an organization.\nPrivileges granted for a user at the organization level gives the permission to all projects within that organization.\n* policy_publisher - able to publish/unpublish policy templates. This role can only be granted at an organization level.\n* policy_viewer - able to view policy templates, applied policies, and incidents.\n* policy_manager - able to create and delete applied policies; able to view all resources.\n* policy_designer - able to upload/update and delete policy templates; able to create and delete applied policies; able to view all resources.\n\nFor more detailed information on roles, see [policy access control](http://docs.rightscale.com/policies/#access-control).\n\n",
    "version": ""
  },
  "host": "localhost:80",
  "consumes": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "produces": [
    "application/json",
    "application/xml",
    "application/gob"
  ],
  "paths": {
    "/api/governance/orgs/{org_id}/incident_aggregates": {
      "get": {
        "tags": [
          "IncidentAggregate"
        ],
        "summary": "Index incident_aggregates",
        "description": "Index retrieves the list of incident_aggregates in an organization.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident_aggregate:index||common:org:own`",
        "operationId": "IncidentAggregate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incident_aggregates",
            "required": false,
            "type": "string",
            "enum": [
              "default"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/incident_aggregates/non_catalog": {
      "get": {
        "tags": [
          "IncidentAggregate"
        ],
        "summary": "Show non-catalog incidents",
        "description": "ShowNonCatalog retrieves a list of incidents in the non-catalog policy aggregate. These incidents largely originate from dev/test environments.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident_aggregate:show||common:org:own`",
        "operationId": "IncidentAggregate#show_non_catalog",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incident aggregate",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "index"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident_aggregate.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident_aggregate.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNonCatalogBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/incident_aggregates/{incident_aggregate_id}": {
      "get": {
        "tags": [
          "IncidentAggregate"
        ],
        "summary": "Show an aggregate",
        "description": "Show retrieves the details of an aggregate.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident_aggregate:show||common:org:own`",
        "operationId": "IncidentAggregate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incident aggregate",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "index",
              "source"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_aggregate_id",
            "in": "path",
            "description": "incident_aggregate_id identifies an aggregate by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident_aggregate.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident_aggregate.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentAggregateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/policy_aggregates": {
      "get": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Index policy aggregates",
        "description": "Index retrieves the list of policy aggregates in an org.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:index||common:org:own`",
        "operationId": "PolicyAggregate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy aggregates.",
            "required": false,
            "type": "string",
            "enum": [
              "default"
            ]
          },
          {
            "name": "name",
            "in": "query",
            "description": "name is a filter to only show policy aggregates that match this name.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the policy aggregate list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the policy aggregate list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Create a policy aggregate",
        "description": "Create applies a policy template to a given project. The policy aggregate will continually run until deleted.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:create||common:org:own`",
        "operationId": "PolicyAggregate#create",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "CreateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateRequestBody",
              "required": [
                "name",
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateCreateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/policy_aggregates/non_catalog": {
      "get": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Show non catalog applied policies",
        "description": "ShowNonCatalog retrieves applied policies that are not part of a regular aggregate. Only applied policies are applied from the project-scoped Template endpoint (as opposed to the org-wide Catalog) are part of this view. These template-based policies should largely be only used for development and testing purposes.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:show||common:org:own`",
        "operationId": "PolicyAggregate#show_non_catalog",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render applied policy items.",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "index"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNonCatalogBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/policy_aggregates/{policy_aggregate_id}": {
      "get": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Show a policy aggregate",
        "description": "Show retrieves the details of a policy aggregate.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:show||common:org:own`",
        "operationId": "PolicyAggregate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy aggregate",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "source"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_aggregate_id",
            "in": "path",
            "description": "policy_aggregate_id identifies a policy aggregate by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Delete a policy aggregate",
        "description": "Delete asynchronously stops and deletes a policy aggregate. All individual applied policies in the aggregate will be stopped.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:delete||common:org:own`",
        "operationId": "PolicyAggregate#delete",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_aggregate_id",
            "in": "path",
            "description": "policy_aggregate_id identifies a policy aggregate by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "PolicyAggregate"
        ],
        "summary": "Update a policy aggregate",
        "description": "Update changes the list of projects in a policy aggregate.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_aggregate:update||common:org:own`",
        "operationId": "PolicyAggregate#update",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an org by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_aggregate_id",
            "in": "path",
            "description": "policy_aggregate_id identifies an policy aggregate by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateRequestBody"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyAggregateUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/published_templates": {
      "get": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Index published templates",
        "description": "Index retrieves the list of published templates in an organization.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:index||common:org:own`",
        "operationId": "PublishedTemplate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render published templates",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "show_hidden",
            "in": "query",
            "description": "show_hidden will show templates that have been hidden if set to true.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the published template list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the published template list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Creates a published template",
        "description": "Create creates an organization-scoped published template from a project-scoped policy template.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:create||common:org:own`",
        "operationId": "PublishedTemplate#create",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "CreateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateRequestBody",
              "required": [
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateResponseBody",
              "required": [
                "location"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateNotFoundResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateConflictResponseBody"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/published_templates/{template_id}": {
      "get": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Show a published template",
        "description": "Show retrieves the details of a published template.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:show||common:org:own`",
        "operationId": "PublishedTemplate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render published template",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Update a published template",
        "description": "Update updates a published template in place for an organization, by replacing it. Any existing applied policies using the template will not be updated; they must be deleted and recreated again.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:update||common:org:own`",
        "operationId": "PublishedTemplate#update",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateRequestBody",
              "required": [
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Delete a published template",
        "description": "Delete deletes a published template from an organization. Deleting a published template will not delete any applied policies created from the template, they must be stopped explicitly.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:delete||common:org:own`",
        "operationId": "PublishedTemplate#delete",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/published_templates/{template_id}/hide": {
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Hide a published template",
        "description": "Hide hides a RightScale built-in template from an organization.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:hide||common:org:own`",
        "operationId": "PublishedTemplate#hide",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/orgs/{org_id}/published_templates/{template_id}/unhide": {
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Unhide a published template",
        "description": "Unhide unhides a RightScale built-in template from an organization.\n\n**Required security scopes for GlobalSession**:\n  * `governance:published_template:unhide||common:org:own`",
        "operationId": "PublishedTemplate#unhide",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/applied_policies": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Index applied policies",
        "description": "Index retrieves the list of applied policies in a project.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:index||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render applied policies",
            "required": false,
            "type": "string",
            "enum": [
              "default"
            ]
          },
          {
            "name": "name",
            "in": "query",
            "description": "name is a filter to only show applied policies that match this name.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the applied policy list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the applied policy list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Create an applied policy",
        "description": "Create applies a policy template to a given project. The applied policy will continually run until deleted.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:create||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#create",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "CreateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateRequestBody",
              "required": [
                "name",
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/applied_policies/{policy_id}": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show an applied policy",
        "description": "Show retrieves the details of an applied policy.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:show||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render applied policy",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Delete an applied policy",
        "description": "Delete stops and deletes an applied policy.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:delete||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Updates an applied policy and evaulates it",
        "description": "Updates attributes of an applied policy and immmediately evaluates it. It only affects the normal execution schedule, if the frequency changes\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:update||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#update",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/applied_policies/{policy_id}/evaluate": {
      "post": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Evaluate an applied policy",
        "description": "Evaluate executes an applied policy evaluation on demand. It does not affect the normal execution schedule.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:evaluate||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#evaluate",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/applied_policies/{policy_id}/log": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show the last evaluation log of an applied policy",
        "description": "ShowLog retrieves the last evaluation log of an applied policy. *The content type is \"text/markdown\"*.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:show_log||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#show_log",
        "produces": [
          "text/markdown"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "type": "string"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the applied policy list.",
                "type": "string"
              },
              "Last-Modified": {
                "description": "last_evaluation_finish is the timestamp of the finish of the last policy evaluation.",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the applied policy list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/applied_policies/{policy_id}/status": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show the evaluation status of an applied policy",
        "description": "ShowStatus retrieves the evaluation status details of an applied policy.\n\n**Required security scopes for GlobalSession**:\n  * `governance:applied_policy:show||common:project:own||common:org:own`",
        "operationId": "AppliedPolicy#show_status",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/approval_requests": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Index approval requests",
        "description": "Index retrieves the list of approval requests in a project.\n\n**Required security scopes for GlobalSession**:\n  * `governance:approval_request:index||common:project:own||common:org:own`",
        "operationId": "Approval#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render approval requests.",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "id",
            "in": "query",
            "description": "Optional resource ID to filter. Multiple may be specified.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "subject_kind",
            "in": "query",
            "description": "Subject kind to filter on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject_href",
            "in": "query",
            "description": "Subject HREF to filter on.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the approval to filter on. Multiple may be specified.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "pending",
                "approved",
                "denied"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "Previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is a HTTP ETag for the list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is a HTTP ETag for the list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ApprovalIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/approval_requests/{approval_request_id}": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Show an approval request",
        "description": "Show retrieves the details of an approval request.\n\n**Required security scopes for GlobalSession**:\n  * `governance:approval_request:show||common:project:own||common:org:own`",
        "operationId": "Approval#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render approval request.",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "approval_request_id",
            "in": "path",
            "description": "approval_request_id identifes an approval by its ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ApprovalShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/approval_requests/{approval_request_id}/approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Approve an approval request",
        "description": "Approve approves a single approval request.\n\n**Required security scopes for GlobalSession**:\n  * `governance:approval_request:approve||common:project:own||common:org:own`",
        "operationId": "Approval#approve",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "approval_request_id",
            "in": "path",
            "description": "approval_request_id identifes an approval request by its ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "ApproveRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalApproveRequestBody"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ApprovalApproveBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/approval_requests/{approval_request_id}/deny": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Deny an approval request",
        "description": "Deny denies a single approval request.\n\n**Required security scopes for GlobalSession**:\n  * `governance:approval_request:deny||common:project:own||common:org:own`",
        "operationId": "Approval#deny",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "approval_request_id",
            "in": "path",
            "description": "approval_request_id identifes an approval request by its ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "DenyRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalDenyRequestBody"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ApprovalDenyBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/archived_incidents": {
      "get": {
        "tags": [
          "ArchivedIncident"
        ],
        "summary": "Index archived_incidents",
        "description": "Index retrieves the list of archived_incidents in a project.\n\n**Required security scopes for GlobalSession**:\n  * `governance:archived_incident:index||common:project:own||common:org:own`",
        "operationId": "ArchivedIncident#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render archived_incidents",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "state is a filter to only show archived_incidents that are in this state.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "resolved",
                "terminated"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "applied_policy_id",
            "in": "query",
            "description": "applied_policy_id is a filter to only show archived_incidents that were created by a certain applied policy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/archived_incidents/{incident_id}": {
      "get": {
        "tags": [
          "ArchivedIncident"
        ],
        "summary": "Show an archived incident",
        "description": "Show retrieves the details of an archived incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:archived_incident:show||common:project:own||common:org:own`",
        "operationId": "ArchivedIncident#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render archived incident",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an archived incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/archived_incidents/{incident_id}/escalations": {
      "get": {
        "tags": [
          "ArchivedIncident"
        ],
        "summary": "Index escalations and their statuses for an archived incident",
        "description": "IndexEscalations retrieves the status details of all of the escalations for an archived incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:archived_incident:index||common:project:own||common:org:own`",
        "operationId": "ArchivedIncident#index_escalations",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an archived incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexEscalationsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/archived_incidents/{incident_id}/resolutions": {
      "get": {
        "tags": [
          "ArchivedIncident"
        ],
        "summary": "Index resolutions and their statuses for an archived incident",
        "description": "IndexResolutions retrieves the status details of all of the resolutions for an archived incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:archived_incident:index||common:project:own||common:org:own`",
        "operationId": "ArchivedIncident#index_resolutions",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an archived incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsNotFoundResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/ArchivedIncidentIndexResolutionsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/incidents": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index incidents",
        "description": "Index retrieves the list of incidents in a project.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident:index||common:project:own||common:org:own`",
        "operationId": "Incident#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incidents",
            "required": false,
            "type": "string",
            "enum": [
              "default"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "state is a filter to only show incidents that are in this state.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "triggered",
                "resolved",
                "terminated"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "applied_policy_id",
            "in": "query",
            "description": "applied_policy_id is a filter to only show incidents that were created by a certain applied policy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/incidents/{incident_id}": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Show an incident",
        "description": "Show retrieves the details of an incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident:show||common:project:own||common:org:own`",
        "operationId": "Incident#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incident",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the incident.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/incidents/{incident_id}/escalations": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index escalations and their statuses for an incident",
        "description": "IndexEscalations retrieves the status details of all of the escalations for an incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident:index||common:project:own||common:org:own`",
        "operationId": "Incident#index_escalations",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/incidents/{incident_id}/resolutions": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index resolutions and their statuses for an incident",
        "description": "IndexResolutions retrieves the status details of all of the resolutions for an incident.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident:index||common:project:own||common:org:own`",
        "operationId": "Incident#index_resolutions",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsNotFoundResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/incidents/{incident_id}/resolve": {
      "put": {
        "tags": [
          "Incident"
        ],
        "summary": "Resolve an incident",
        "description": "Resolve resolves an incident by setting it to an inactive state, indicating that it has been addressed.\n\n**Required security scopes for GlobalSession**:\n  * `governance:incident:resolve||common:project:own||common:org:own`",
        "operationId": "Incident#resolve",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveNotFoundResponseBody"
            }
          },
          "412": {
            "description": "Precondition Failed response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolvePreconditionFailedResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/policy_templates": {
      "get": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Index policy templates",
        "description": "IndexPolicyTemplates retrieves the list of policy templates in a project.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:index||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy templates",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "description": "etag is an HTTP ETag. It is typically the previous ETag value retrieved by client if any. Service returns an empty response with HTTP status code 304 Not Modified if value matches current value server side.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the policy template list.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "description": "etag is an HTTP ETag for the policy template list.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Upload a policy template",
        "description": "Upload uploads a policy template for a project, first compiling it. On failure, an array of syntax errors will be returned.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:upload||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#upload",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "UploadRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadForbiddenResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadConflictResponseBody"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/policy_templates/compile": {
      "post": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Compile a policy template",
        "description": "Compile compiles a policy template for a project. This is only to be used for checking the syntax of a policy template; the results are not stored.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:compile||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#compile",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "CompileRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/policy_templates/{template_id}": {
      "get": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Show a policy template",
        "description": "Show retrieves the details of a policy template.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:show||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy template",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Update a policy template",
        "description": "Update updates a policy template in place for a project, by replacing it. Any existing applied policies using the template will not be updated; they must be deleted and recreated again.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:update||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#update",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateNotFoundResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Delete a policy template",
        "description": "Delete deletes a policy template from a project. Deleting a policy template will not delete any applied policies created from the template, they must be stopped explicitly.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:delete||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    },
    "/api/governance/projects/{project_id}/policy_templates/{template_id}/retrieve_data": {
      "post": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Retrieves data sources and resources from a given policy template",
        "description": "Retrieve Data retrieves the data sources specified in a give policy template.\n\n**Required security scopes for GlobalSession**:\n  * `governance:policy_template:retrieve_data||common:project:own||common:org:own`",
        "operationId": "PolicyTemplate#retrieve_data",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Api-Version",
            "in": "header",
            "description": "API Version, must be specified using this header",
            "required": true,
            "type": "string",
            "enum": [
              "1.0"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token used to perform authorization",
            "required": false,
            "type": "string"
          },
          {
            "name": "retrieve_data_request_body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateRetrieveDataBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "http"
        ],
        "security": [
          {
            "GlobalSession_header_Authorization": []
          }
        ]
      }
    }
  },
  "definitions": {
    "ActionSummaryResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.action_summary; view=default",
      "type": "object",
      "properties": {
        "failed_count": {
          "type": "integer",
          "description": "The number of failed escalations.",
          "example": 1,
          "format": "int64"
        },
        "pending_count": {
          "type": "integer",
          "description": "The number of incidents with pending approvals.",
          "example": 12,
          "format": "int64"
        }
      },
      "description": "Summary of escalation and resolution actions for an incident aggregate.",
      "example": {
        "failed_count": 1,
        "pending_count": 12
      },
      "required": [
        "pending_count",
        "failed_count"
      ]
    },
    "AppliedPolicyCreateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateRequestBody": {
      "title": "AppliedPolicyCreateRequestBody",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name and credential used to launch the policy.",
          "example": {
            "Beatae iure.": "Molestias porro sit nulla eum ea."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "default": false,
          "example": false
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "default": "15 minutes",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "name": "cloud_vendor",
              "value": "AWS"
            },
            {
              "name": "email_list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity is the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "default": false,
          "example": false
        },
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template or published template that is applied.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/(projects/[0-9]+/policy|orgs/[0-9]+/published)_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "credentials": {
          "Numquam quia necessitatibus est.": "Officia voluptatem in vitae voluptatem.",
          "Sapiente labore ducimus vitae nam.": "Illum est et mollitia delectus sit voluptatem.",
          "Velit quo rem.": "Enim aliquid."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "dry_run": false,
        "frequency": "daily",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "name": "cloud_vendor",
            "value": "AWS"
          },
          {
            "name": "email_list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "severity": "low",
        "skip_approvals": false,
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "name",
        "template_href"
      ]
    },
    "AppliedPolicyCreateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Libero expedita voluptatem quis corrupti vel dolor.": "Voluptate perferendis voluptatum vero voluptas voluptas.",
            "Magnam doloremque eum expedita iste.": "Cumque omnis quaerat aut consequatur.",
            "Non dolorem ut.": "Dolores voluptatem architecto delectus."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "5cb5331aeeb4030089a446f0"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if applied incident is part of an policy aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_aggregate_id": {
          "type": "string",
          "description": "policy_aggregate_id is set if applied policy is part of an policy aggregate.",
          "example": "5cb88929eeb4030089a44876"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "scope": {
          "type": "string",
          "description": "scope is whether the policy is managed at an org-wide or project level.",
          "example": "project",
          "enum": [
            "project",
            "org"
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "CreateResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "credentials": {
          "Autem optio.": "Omnis quam ipsa ut.",
          "Reprehenderit dolore.": "Minima nihil fuga.",
          "Soluta alias harum corrupti aspernatur est mollitia.": "Dolores expedita voluptatem mollitia et eos."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
        "id": "5cb5331aeeb4030089a446f0",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_aggregate_id": "5cb88929eeb4030089a44876",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "scope": "project",
        "severity": "low",
        "skip_approvals": false,
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyCreateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_unprocessable_entity_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "evaluate_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "evaluate_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "evaluate_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "evaluate_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "evaluate_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "evaluate_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of applied policies in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy_list\".",
          "example": "gov#applied_policy_list",
          "enum": [
            "gov#applied_policy_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
              "Nulla vel occaecati et.": "Distinctio necessitatibus."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "scope": "project",
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
              "Nulla vel occaecati et.": "Distinctio necessitatibus."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "scope": "project",
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
              "Nulla vel occaecati et.": "Distinctio necessitatibus."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "scope": "project",
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
              "Nulla vel occaecati et.": "Distinctio necessitatibus."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "scope": "project",
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          }
        ],
        "kind": "gov#applied_policy_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "AppliedPolicyIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Aut saepe delectus minus commodi ut soluta.": "Soluta consequuntur velit autem asperiores asperiores quisquam."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "5cb5331aeeb4030089a446f0"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if applied incident is part of an policy aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_aggregate_id": {
          "type": "string",
          "description": "policy_aggregate_id is set if applied policy is part of an policy aggregate.",
          "example": "5cb88929eeb4030089a44876"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "scope": {
          "type": "string",
          "description": "scope is whether the policy is managed at an org-wide or project level.",
          "example": "org",
          "enum": [
            "project",
            "org"
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "AppliedPolicy describes a policy that is currently applied. (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "credentials": {
          "Quasi quidem tempore est et.": "Placeat aut rerum inventore."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
        "id": "5cb5331aeeb4030089a446f0",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_aggregate_id": "5cb88929eeb4030089a44876",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "scope": "project",
        "severity": "low",
        "skip_approvals": false,
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AppliedPolicyResponseBody"
      },
      "description": "AppliedPolicyCollectionResponseBody is the result type for an array of AppliedPolicyResponseBody (default view)",
      "example": [
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "credentials": {
            "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
            "Nulla vel occaecati et.": "Distinctio necessitatibus."
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "scope": "project",
          "severity": "low",
          "skip_approvals": false,
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "credentials": {
            "Neque et ducimus quod necessitatibus distinctio vero.": "Recusandae error.",
            "Nulla vel occaecati et.": "Distinctio necessitatibus."
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "scope": "project",
          "severity": "low",
          "skip_approvals": false,
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        }
      ]
    },
    "AppliedPolicyResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "5cb5331aeeb4030089a446f0"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if applied incident is part of an policy aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "policy_aggregate_id": {
          "type": "string",
          "description": "policy_aggregate_id is set if applied policy is part of an policy aggregate.",
          "example": "5cb88929eeb4030089a44876"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        }
      },
      "description": "AppliedPolicy describes a policy that is currently applied. (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
        "id": "5cb5331aeeb4030089a446f0",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "policy_aggregate_id": "5cb88929eeb4030089a44876",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_log_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_log_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_log_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_log_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_log_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_log_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Ad id ea sunt.": "Eum enim.",
            "Provident atque facilis et non.": "Necessitatibus id facere voluptatem eaque ipsam cupiditate."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "5cb5331aeeb4030089a446f0"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if applied incident is part of an policy aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_aggregate_id": {
          "type": "string",
          "description": "policy_aggregate_id is set if applied policy is part of an policy aggregate.",
          "example": "5cb88929eeb4030089a44876"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "scope": {
          "type": "string",
          "description": "scope is whether the policy is managed at an org-wide or project level.",
          "example": "org",
          "enum": [
            "project",
            "org"
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "credentials": {
          "Aliquid temporibus illo.": "Unde sit expedita nulla saepe aut quisquam.",
          "Error fugit omnis mollitia sed.": "Rerum eum esse voluptas ea ad.",
          "Qui est nobis laboriosam.": "Vel doloribus cumque accusamus sapiente quia."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
        "id": "5cb5331aeeb4030089a446f0",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_aggregate_id": "5cb88929eeb4030089a44876",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "scope": "project",
        "severity": "low",
        "skip_approvals": false,
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyShowStatusBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_status_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_status_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_status_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_status_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_status_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusResponseBody": {
      "title": "Mediatype identifier: application.vnd/rightscale.applied_policy_status; view=default",
      "type": "object",
      "properties": {
        "evaluation_error": {
          "type": "string",
          "description": "evaluation_error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "evaluation_errored_at": {
          "type": "string",
          "description": "evaluation_errored_at is the timestamp of the last evaluation error.",
          "example": "2018-07-30T00:09:41Z",
          "format": "date-time"
        },
        "last_evaluation_finish": {
          "type": "string",
          "description": "last_evaluation_finish is the timestamp of the finish of the last policy evaluation. It is omitted if the policy is currently evaluating.",
          "example": "2018-07-30T00:09:41Z",
          "format": "date-time"
        },
        "last_evaluation_start": {
          "type": "string",
          "description": "last_evaluation_start is the timestamp of the start of the last policy evaluation.",
          "example": "2018-07-30T00:09:39Z",
          "format": "date-time"
        },
        "next_evaluation_start": {
          "type": "string",
          "description": "next_evaluation_start is the timestamp of the next expected policy evaluation start. It is omitted if the policy is currently evalutating.",
          "example": "2018-07-30T00:09:56Z",
          "format": "date-time"
        }
      },
      "description": "show_status_response_body result type (default view)",
      "example": {
        "evaluation_error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "evaluation_errored_at": "2018-07-30T00:09:41Z",
        "last_evaluation_finish": "2018-07-30T00:09:41Z",
        "last_evaluation_start": "2018-07-30T00:09:39Z",
        "next_evaluation_start": "2018-07-30T00:09:56Z"
      }
    },
    "AppliedPolicyShowStatusUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_status_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyUpdateRequestBody": {
      "title": "AppliedPolicyUpdateRequestBody",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "name": "cloud_vendor",
              "value": "AWS"
            },
            {
              "name": "email_list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        }
      },
      "example": {
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "dry_run": false,
        "frequency": "daily",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "name": "cloud_vendor",
            "value": "AWS"
          },
          {
            "name": "email_list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "severity": "low",
        "skip_approvals": false
      }
    },
    "AppliedPolicyUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "approve_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "approve_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "approve_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "approve_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "approve_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalApproveRequestBody": {
      "title": "ApprovalApproveRequestBody",
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the approval.",
          "example": [
            {
              "name": "excluded_tags",
              "value": [
                "env:name=staging",
                "custom:save=true"
              ]
            }
          ]
        }
      },
      "example": {
        "options": [
          {
            "name": "excluded_tags",
            "value": [
              "env:name=staging",
              "custom:save=true"
            ]
          }
        ]
      }
    },
    "ApprovalApproveUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "approve_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "deny_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "deny_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "deny_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "deny_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "deny_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalDenyRequestBody": {
      "title": "ApprovalDenyRequestBody",
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "A comment that explains the reason for denial",
          "example": "The volumes need to be backed up."
        }
      },
      "example": {
        "comment": "The volumes need to be backed up."
      }
    },
    "ApprovalDenyUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "deny_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.approval_request_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of approval requests in the list",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/ApprovalRequestResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#approval_request_list\".",
          "example": "gov#approval_request_list",
          "enum": [
            "gov#approval_request_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "created_at": "2018-06-12T20:31:02Z",
            "description": "Request to delete volumes that are unattached for over 30 days",
            "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
            "id": "5b36ad26d4c1990070df726a",
            "kind": "gov#approval_request",
            "label": "Deletion of Unattached Volumes",
            "project_id": 60073,
            "status": "pending",
            "subject": {
              "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
              "kind": "gov#incident"
            },
            "updated_at": "2018-06-12T20:51:02Z"
          },
          {
            "created_at": "2018-06-12T20:31:02Z",
            "description": "Request to delete volumes that are unattached for over 30 days",
            "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
            "id": "5b36ad26d4c1990070df726a",
            "kind": "gov#approval_request",
            "label": "Deletion of Unattached Volumes",
            "project_id": 60073,
            "status": "pending",
            "subject": {
              "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
              "kind": "gov#incident"
            },
            "updated_at": "2018-06-12T20:51:02Z"
          }
        ],
        "kind": "gov#approval_request_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "ApprovalIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.approval_request; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the approval request creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "description describes the details for this approval request.",
          "example": "Request to delete volumes that are unattached for over 30 days"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the approval request",
          "example": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "pattern": "^/api/governance/projects/[0-9]+/approval_requests/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an approval request by ID.",
          "example": "5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#approval_request\".",
          "example": "gov#approval_request",
          "enum": [
            "gov#approval_request"
          ]
        },
        "label": {
          "type": "string",
          "description": "label is a short title for this approval request",
          "example": "Deletion of Unattached Volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project where this approval request is created.",
          "example": 60073,
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "status is the status of this approval request.",
          "example": "pending",
          "enum": [
            "pending",
            "approved",
            "denied"
          ]
        },
        "subject": {
          "$ref": "#/definitions/ApprovalSubjectResponseBody"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        }
      },
      "description": "ApprovalRequest describes an approval request to perform one or more actions (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "description": "Request to delete volumes that are unattached for over 30 days",
        "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
        "id": "5b36ad26d4c1990070df726a",
        "kind": "gov#approval_request",
        "label": "Deletion of Unattached Volumes",
        "project_id": 60073,
        "status": "pending",
        "subject": {
          "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
          "kind": "gov#incident"
        },
        "updated_at": "2018-06-12T20:51:02Z"
      },
      "required": [
        "id",
        "href",
        "kind",
        "subject",
        "project_id"
      ]
    },
    "ApprovalRequestResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.approval_request; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApprovalRequestResponseBody"
      },
      "description": "ApprovalRequestCollectionResponseBody is the result type for an array of ApprovalRequestResponseBody (default view)",
      "example": [
        {
          "created_at": "2018-06-12T20:31:02Z",
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        },
        {
          "created_at": "2018-06-12T20:31:02Z",
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        },
        {
          "created_at": "2018-06-12T20:31:02Z",
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        },
        {
          "created_at": "2018-06-12T20:31:02Z",
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        }
      ]
    },
    "ApprovalRequestResponseBodyExtended": {
      "title": "Mediatype identifier: application/vnd.rightscale.approval_request; view=default",
      "type": "object",
      "properties": {
        "approved_at": {
          "type": "string",
          "description": "approved_at is the approval timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "approved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the approval request creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "denial_comment": {
          "type": "string",
          "description": "denial_comment is a comment that explains the reason for denial, if relevant.",
          "example": "The volumes need to be backed up."
        },
        "denied_at": {
          "type": "string",
          "description": "denied_at is the denial timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "denied_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "description": {
          "type": "string",
          "description": "description describes the details for this approval request.",
          "example": "Request to delete volumes that are unattached for over 30 days"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the approval request",
          "example": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "pattern": "^/api/governance/projects/[0-9]+/approval_requests/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an approval request by ID.",
          "example": "5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#approval_request\".",
          "example": "gov#approval_request",
          "enum": [
            "gov#approval_request"
          ]
        },
        "label": {
          "type": "string",
          "description": "label is a short title for this approval request",
          "example": "Deletion of Unattached Volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the approval request.",
          "example": [
            {
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list",
              "value": [
                "env:name=staging",
                "custom:save=true"
              ]
            }
          ]
        },
        "parameters": {
          "type": "object",
          "description": "parameters is a list of parameters required for approval request.",
          "example": {
            "excluded_tags": {
              "description": "The list of tags that are excluded when deleting volumes",
              "index": 1,
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list"
            }
          },
          "additionalProperties": true
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project where this approval request is created.",
          "example": 60073,
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "status is the status of this approval request.",
          "example": "pending",
          "enum": [
            "pending",
            "approved",
            "denied"
          ]
        },
        "subject": {
          "$ref": "#/definitions/ApprovalSubjectResponseBody"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        }
      },
      "description": "ApprovalRequest describes an approval request to perform one or more actions (default view)",
      "example": {
        "approved_at": "2018-06-12T20:51:02Z",
        "approved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "created_at": "2018-06-12T20:31:02Z",
        "denial_comment": "The volumes need to be backed up.",
        "denied_at": "2018-06-12T20:51:02Z",
        "denied_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "description": "Request to delete volumes that are unattached for over 30 days",
        "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
        "id": "5b36ad26d4c1990070df726a",
        "kind": "gov#approval_request",
        "label": "Deletion of Unattached Volumes",
        "options": [
          {
            "label": "Excluded Tags",
            "name": "excluded_tags",
            "type": "list",
            "value": [
              "env:name=staging",
              "custom:save=true"
            ]
          }
        ],
        "parameters": {
          "excluded_tags": {
            "description": "The list of tags that are excluded when deleting volumes",
            "index": 1,
            "label": "Excluded Tags",
            "name": "excluded_tags",
            "type": "list"
          }
        },
        "project_id": 60073,
        "status": "pending",
        "subject": {
          "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
          "kind": "gov#incident"
        },
        "updated_at": "2018-06-12T20:51:02Z"
      },
      "required": [
        "id",
        "href",
        "kind",
        "subject",
        "project_id"
      ]
    },
    "ApprovalShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.approval_request; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the approval request creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "description describes the details for this approval request.",
          "example": "Request to delete volumes that are unattached for over 30 days"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the approval request",
          "example": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "pattern": "^/api/governance/projects/[0-9]+/approval_requests/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an approval request by ID.",
          "example": "5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#approval_request\".",
          "example": "gov#approval_request",
          "enum": [
            "gov#approval_request"
          ]
        },
        "label": {
          "type": "string",
          "description": "label is a short title for this approval request",
          "example": "Deletion of Unattached Volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project where this approval request is created.",
          "example": 60073,
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "status is the status of this approval request.",
          "example": "pending",
          "enum": [
            "pending",
            "approved",
            "denied"
          ]
        },
        "subject": {
          "$ref": "#/definitions/ApprovalSubjectResponseBody"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "description": "Request to delete volumes that are unattached for over 30 days",
        "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
        "id": "5b36ad26d4c1990070df726a",
        "kind": "gov#approval_request",
        "label": "Deletion of Unattached Volumes",
        "project_id": 60073,
        "status": "pending",
        "subject": {
          "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
          "kind": "gov#incident"
        },
        "updated_at": "2018-06-12T20:51:02Z"
      },
      "required": [
        "id",
        "href",
        "kind",
        "subject",
        "project_id"
      ]
    },
    "ApprovalShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ApprovalSubjectResponseBody": {
      "title": "ApprovalSubjectResponseBody",
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "href is the href of the subject.",
          "example": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is the kind of subject",
          "example": "gov#incident"
        }
      },
      "description": "ApprovalSubject is the subject of an approval.",
      "example": {
        "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
        "kind": "gov#incident"
      },
      "required": [
        "kind",
        "href"
      ]
    },
    "ArchivedIncidentIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_escalations_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_escalations_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexEscalationsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalations; view=default",
      "type": "object",
      "properties": {
        "escalations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EscalationResponseBody"
          },
          "description": "escalations is the set of escalations.",
          "example": [
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the escalations.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "index_escalations_response_body result type (default view)",
      "example": {
        "escalations": [
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "finished_at": "2018-06-12T28:45:02Z",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "ArchivedIncidentIndexEscalationsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.archived_incident_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of incidents in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/ArchivedIncidentResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#archived_incident_list\".",
          "example": "gov#archived_incident_list",
          "enum": [
            "gov#archived_incident_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
            "id": "5b36ad26d4c1990070df726a",
            "kind": "gov#archived_incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
            "id": "5b36ad26d4c1990070df726a",
            "kind": "gov#archived_incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          }
        ],
        "kind": "gov#archived_incident_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "ArchivedIncidentIndexResolutionsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_resolutions_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolutions; view=default",
      "type": "object",
      "properties": {
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "resolutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolutionResponseBody"
          },
          "description": "resolutions is the set of resolutions.",
          "example": [
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the resolutions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "index_resolutions_response_body result type (default view)",
      "example": {
        "finished_at": "2018-06-12T28:45:02Z",
        "resolutions": [
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "ArchivedIncidentIndexResolutionsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_resolutions_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexResolutionsUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_unprocessable_entity_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.archived_incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "etag": {
          "type": "string",
          "description": "etag is an HTTP ETag for the incident.",
          "example": "\"d41d8cd98f00b204e9800998ecf8427e\""
        },
        "href": {
          "type": "string",
          "description": "href is the href of the archived incident.",
          "example": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "pattern": "^/api/governance/projects/[0-9]+/archived_incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the archived incident, must be unique in the project.",
          "example": "5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#archived_incident\".",
          "example": "gov#archived_incident",
          "enum": [
            "gov#archived_incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "ArchivedIncident describes an incident raised from an applied policy. (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
        "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
        "id": "5b36ad26d4c1990070df726a",
        "kind": "gov#archived_incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind",
        "etag"
      ]
    },
    "ArchivedIncidentResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.archived_incident; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ArchivedIncidentResponseBody"
      },
      "description": "ArchivedIncidentCollectionResponseBody is the result type for an array of ArchivedIncidentResponseBody (default view)",
      "example": [
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#archived_incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#archived_incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#archived_incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#archived_incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        }
      ]
    },
    "ArchivedIncidentShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ArchivedIncidentShowOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.archived_incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "href": {
          "type": "string",
          "description": "href is the href of the archived incident.",
          "example": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
          "pattern": "^/api/governance/projects/[0-9]+/archived_incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the archived incident, must be unique in the project.",
          "example": "5b36ad26d4c1990070df726a"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#archived_incident\".",
          "example": "gov#archived_incident",
          "enum": [
            "gov#archived_incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "ShowOKResponseBody result type (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "href": "/api/governance/projects/60073/archived_incidents/5b36ad26d4c1990070df726a",
        "id": "5b36ad26d4c1990070df726a",
        "kind": "gov#archived_incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind"
      ]
    },
    "ArchivedIncidentShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "CompilationErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_error; view=default",
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "description": "origin includes the template name and line number which generated the error.",
          "example": "template: template.policy, line: 3"
        },
        "problem": {
          "type": "string",
          "description": "problem is the kind of error.",
          "example": "Undefined variable or method"
        },
        "resolution": {
          "type": "string",
          "description": "resolutions indicates how to resolve the error.",
          "example": "Define 'foo'"
        },
        "summary": {
          "type": "string",
          "description": "summary includes detailed error information.",
          "example": "'foo' is undefined"
        }
      },
      "description": "CompilationError is a single compilation error.",
      "example": {
        "origin": "template: template.policy, line: 3",
        "problem": "Undefined variable or method",
        "resolution": "Define 'foo'",
        "summary": "'foo' is undefined"
      },
      "required": [
        "origin",
        "problem",
        "summary",
        "resolution"
      ]
    },
    "ConfigurationOptionCreateTypeRequestBody": {
      "title": "ConfigurationOptionCreateTypeRequestBody",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of option",
          "example": "cloud"
        },
        "value": {
          "description": "value of option",
          "example": "AWS"
        }
      },
      "description": "ConfigurationOptionCreateType is the payload for creating a single parameter value used to configure an applied policy.",
      "example": {
        "name": "cloud",
        "value": "AWS"
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ConfigurationOptionResponseBody": {
      "title": "ConfigurationOptionResponseBody",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "label of option",
          "example": "Cloud Vendor"
        },
        "name": {
          "type": "string",
          "description": "name of option",
          "example": "cloud"
        },
        "no_echo": {
          "type": "boolean",
          "description": "no_echo determines whether the value of the configuration option should be hidden in UIs and API responses.",
          "default": false,
          "example": true
        },
        "type": {
          "type": "string",
          "description": "type of option",
          "example": "number",
          "enum": [
            "string",
            "number",
            "list"
          ]
        },
        "value": {
          "description": "value of option",
          "example": "AWS"
        }
      },
      "description": "ConfigurationOption describes a single parameter value used to configure an applied policy.",
      "example": {
        "label": "Cloud Vendor",
        "name": "cloud",
        "no_echo": true,
        "type": "number",
        "value": "AWS"
      },
      "required": [
        "name",
        "label",
        "type",
        "value"
      ]
    },
    "DataResponse": {
      "title": "Mediatype identifier: application/vnd.rightscale.data; view=default",
      "type": "object",
      "properties": {
        "data": {
          "description": "is the extracted data",
          "example": "Atque est sapiente architecto beatae laudantium."
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the datasource.",
          "example": "Est cum et voluptatem."
        },
        "type": {
          "type": "string",
          "description": "type is is either Resource or Datasource",
          "example": "resource",
          "enum": [
            "resource",
            "datasource"
          ]
        }
      },
      "description": "Data contains retrieved datasource or resource data. (default view)",
      "example": {
        "data": "Quas et sed consectetur sequi.",
        "name": "Eum assumenda veritatis et aut incidunt.",
        "type": "datasource"
      },
      "required": [
        "name",
        "type",
        "data"
      ]
    },
    "EscalationActionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalation_action; view=default",
      "type": "object",
      "properties": {
        "approval_request": {
          "$ref": "#/definitions/ApprovalRequestResponseBodyExtended"
        },
        "error": {
          "type": "string",
          "description": "error is any error occurred when handling the action.",
          "example": "failed to create cloud workflow process: definition foo not found"
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the action was finished.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "process_href": {
          "type": "string",
          "description": "process_href is the href of a cloud workflow process. Required if the type is cloud_workflow.",
          "example": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the action was started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the action.",
          "example": "running",
          "enum": [
            "queued",
            "pending",
            "running",
            "completed",
            "skipped",
            "failed",
            "approved",
            "denied"
          ]
        },
        "type": {
          "type": "string",
          "description": "type is the type of the action.",
          "example": "email",
          "enum": [
            "email",
            "cloud_workflow",
            "resolve_incident",
            "request_approval"
          ]
        }
      },
      "description": "EscalationAction holds the status of a single action in an escalation.",
      "example": {
        "approval_request": {
          "approved_at": "2018-06-12T20:51:02Z",
          "approved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "created_at": "2018-06-12T20:31:02Z",
          "denial_comment": "The volumes need to be backed up.",
          "denied_at": "2018-06-12T20:51:02Z",
          "denied_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "options": [
            {
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list",
              "value": [
                "env:name=staging",
                "custom:save=true"
              ]
            }
          ],
          "parameters": {
            "excluded_tags": {
              "description": "The list of tags that are excluded when deleting volumes",
              "index": 1,
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list"
            }
          },
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        },
        "error": "failed to create cloud workflow process: definition foo not found",
        "finished_at": "2018-06-12T22:31:02Z",
        "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running",
        "type": "email"
      },
      "required": [
        "type",
        "status"
      ]
    },
    "EscalationResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalation; view=default",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EscalationActionResponseBody"
          },
          "description": "actions is the list of individual actions.",
          "example": [
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the name of the escalation.",
          "example": "send_email"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the set of escalation actions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "Escalation holds the status of one or more actions of an escalation.",
      "example": {
        "actions": [
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          }
        ],
        "name": "send_email",
        "status": "running"
      },
      "required": [
        "status",
        "name",
        "actions"
      ]
    },
    "IncidentAggregateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of incident aggregates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/IncidentAggregateResponseBodyIndexCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate_list\".",
          "example": "gov#incident_aggregate_list",
          "enum": [
            "gov#incident_aggregate_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "action_summary": {
              "failed_count": 1,
              "pending_count": 12
            },
            "category": "tags",
            "count": 30,
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "id": "507f191e810c19729de860ea",
            "incident_summary": {
              "incident_count": 25,
              "resolved_count": 20,
              "triggered_count": 10,
              "violation_data_count": 527
            },
            "kind": "gov#incident_aggregate",
            "not_modified": "false",
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "policy_aggregate": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
              "id": "5cb88929eeb4030089a44876",
              "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
              "kind": "gov#policy_aggregate",
              "name": "unattached_volumes",
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "severity": "low",
            "state": "triggered",
            "updated_at": "2018-06-12T20:41:02Z"
          },
          {
            "action_summary": {
              "failed_count": 1,
              "pending_count": 12
            },
            "category": "tags",
            "count": 30,
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "id": "507f191e810c19729de860ea",
            "incident_summary": {
              "incident_count": 25,
              "resolved_count": 20,
              "triggered_count": 10,
              "violation_data_count": 527
            },
            "kind": "gov#incident_aggregate",
            "not_modified": "false",
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "policy_aggregate": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
              "id": "5cb88929eeb4030089a44876",
              "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
              "kind": "gov#policy_aggregate",
              "name": "unattached_volumes",
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "severity": "low",
            "state": "triggered",
            "updated_at": "2018-06-12T20:41:02Z"
          }
        ],
        "kind": "gov#incident_aggregate_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "IncidentAggregateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateItemResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_item; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "action_pending": {
          "type": "boolean",
          "description": "action_pending indicates whether any of the incident has any pending actions such as approval requests.",
          "example": false
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "507f191e810c19729de860ea"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate_item\".",
          "example": "gov#incident_aggregate_item",
          "enum": [
            "gov#incident_aggregate_item"
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "description": "url of the incident.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "pattern": "http.*/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "IncidentAggregateItem describes an incident raised from an applied policy. (default view)",
      "example": {
        "action_failed": false,
        "action_pending": false,
        "created_at": "2018-06-12T20:31:02Z",
        "id": "507f191e810c19729de860ea",
        "kind": "gov#incident_aggregate_item",
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "state": "resolved",
        "updated_at": "2018-06-12T20:41:02Z",
        "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "url",
        "kind"
      ]
    },
    "IncidentAggregateItemResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_item; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IncidentAggregateItemResponseBody"
      },
      "description": "IncidentAggregateItemCollectionResponseBody is the result type for an array of IncidentAggregateItemResponseBody (default view)",
      "example": [
        {
          "action_failed": false,
          "action_pending": false,
          "created_at": "2018-06-12T20:31:02Z",
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "action_pending": false,
          "created_at": "2018-06-12T20:31:02Z",
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "action_pending": false,
          "created_at": "2018-06-12T20:31:02Z",
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "action_pending": false,
          "created_at": "2018-06-12T20:31:02Z",
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        }
      ]
    },
    "IncidentAggregateNonCatalogItemResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_non_catalog_item; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "action_pending": {
          "type": "boolean",
          "description": "action_pending indicates whether any of the incident has any pending actions such as approval requests.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident_aggregate.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident_aggregate should trigger escalation actions.",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "507f191e810c19729de860ea"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate_non_catalog_item\".",
          "example": "gov#incident_aggregate_non_catalog_item",
          "enum": [
            "gov#incident_aggregate_non_catalog_item"
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident_aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "description": "url of the incident.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "pattern": "http.*/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "IncidentAggregateNonCatalogItem describes an incident raised from an applied policy. (default view)",
      "example": {
        "action_failed": false,
        "action_pending": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "id": "507f191e810c19729de860ea",
        "kind": "gov#incident_aggregate_non_catalog_item",
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "updated_at": "2018-06-12T20:41:02Z",
        "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "url",
        "kind"
      ]
    },
    "IncidentAggregateNonCatalogItemResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_non_catalog_item; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IncidentAggregateNonCatalogItemResponseBody"
      },
      "description": "IncidentAggregateNonCatalogItemCollectionResponseBody is the result type for an array of IncidentAggregateNonCatalogItemResponseBody (default view)",
      "example": [
        {
          "action_failed": false,
          "action_pending": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_non_catalog_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "action_pending": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "id": "507f191e810c19729de860ea",
          "kind": "gov#incident_aggregate_non_catalog_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "updated_at": "2018-06-12T20:41:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
          "violation_data_count": 527
        }
      ]
    },
    "IncidentAggregateResponseBodyIndex": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate; view=default",
      "type": "object",
      "properties": {
        "action_summary": {
          "$ref": "#/definitions/ActionSummaryResponseBody"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident_aggregate.",
          "example": "tags"
        },
        "count": {
          "type": "integer",
          "description": "The number of incidents across all projects.",
          "example": 30,
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident_aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident_aggregate should trigger escalation actions.",
          "example": false
        },
        "etag": {
          "type": "string",
          "description": "etag is an HTTP ETag for the incident_aggregate.",
          "example": "\"d41d8cd98f00b204e9800998ecf8427e\""
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident_aggregate.",
          "example": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident_aggregate, must be unique in the org.",
          "example": "507f191e810c19729de860ea"
        },
        "incident_summary": {
          "$ref": "#/definitions/IncidentSummaryResponseBody"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate\".",
          "example": "gov#incident_aggregate",
          "enum": [
            "gov#incident_aggregate"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "org": {
          "$ref": "#/definitions/OrgResponseBody"
        },
        "policy_aggregate": {
          "$ref": "#/definitions/PolicyAggregateResponseBodyLink"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident_aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident_aggregate.",
          "example": "triggered",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident_aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        }
      },
      "description": "IncidentAggregate represents a collection of incidents for a single policy from across an organization. (index view) (default view)",
      "example": {
        "action_summary": {
          "failed_count": 1,
          "pending_count": 12
        },
        "category": "tags",
        "count": 30,
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
        "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
        "id": "507f191e810c19729de860ea",
        "incident_summary": {
          "incident_count": 25,
          "resolved_count": 20,
          "triggered_count": 10,
          "violation_data_count": 527
        },
        "kind": "gov#incident_aggregate",
        "not_modified": "false",
        "org": {
          "id": 1105,
          "name": "RightScale QA"
        },
        "policy_aggregate": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "id": "5cb88929eeb4030089a44876",
          "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "kind": "gov#policy_aggregate",
          "name": "unattached_volumes",
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "severity": "low",
        "state": "triggered",
        "updated_at": "2018-06-12T20:41:02Z"
      },
      "required": [
        "id",
        "kind",
        "etag"
      ]
    },
    "IncidentAggregateResponseBodyIndexCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IncidentAggregateResponseBodyIndex"
      },
      "description": "IncidentAggregateResponseBodyIndexCollection is the result type for an array of IncidentAggregateResponseBodyIndex (default view)",
      "example": [
        {
          "action_summary": {
            "failed_count": 1,
            "pending_count": 12
          },
          "category": "tags",
          "count": 30,
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "id": "507f191e810c19729de860ea",
          "incident_summary": {
            "incident_count": 25,
            "resolved_count": 20,
            "triggered_count": 10,
            "violation_data_count": 527
          },
          "items": [
            {
              "action_failed": false,
              "action_pending": false,
              "created_at": "2018-06-12T20:31:02Z",
              "id": "507f191e810c19729de860ea",
              "kind": "gov#incident_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "resolution_message": "Unattached volumes were shut down.",
              "resolved_at": "2018-06-12T20:41:02Z",
              "resolved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "state": "resolved",
              "updated_at": "2018-06-12T20:41:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
              "violation_data_count": 527
            },
            {
              "action_failed": false,
              "action_pending": false,
              "created_at": "2018-06-12T20:31:02Z",
              "id": "507f191e810c19729de860ea",
              "kind": "gov#incident_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "resolution_message": "Unattached volumes were shut down.",
              "resolved_at": "2018-06-12T20:41:02Z",
              "resolved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "state": "resolved",
              "updated_at": "2018-06-12T20:41:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
              "violation_data_count": 527
            }
          ],
          "kind": "gov#incident_aggregate",
          "not_modified": "false",
          "org": {
            "id": 1105,
            "name": "RightScale QA"
          },
          "policy_aggregate": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "severity": "low",
          "state": "triggered",
          "updated_at": "2018-06-12T20:41:02Z"
        },
        {
          "action_summary": {
            "failed_count": 1,
            "pending_count": 12
          },
          "category": "tags",
          "count": 30,
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "id": "507f191e810c19729de860ea",
          "incident_summary": {
            "incident_count": 25,
            "resolved_count": 20,
            "triggered_count": 10,
            "violation_data_count": 527
          },
          "items": [
            {
              "action_failed": false,
              "action_pending": false,
              "created_at": "2018-06-12T20:31:02Z",
              "id": "507f191e810c19729de860ea",
              "kind": "gov#incident_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "resolution_message": "Unattached volumes were shut down.",
              "resolved_at": "2018-06-12T20:41:02Z",
              "resolved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "state": "resolved",
              "updated_at": "2018-06-12T20:41:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
              "violation_data_count": 527
            },
            {
              "action_failed": false,
              "action_pending": false,
              "created_at": "2018-06-12T20:31:02Z",
              "id": "507f191e810c19729de860ea",
              "kind": "gov#incident_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "resolution_message": "Unattached volumes were shut down.",
              "resolved_at": "2018-06-12T20:41:02Z",
              "resolved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "state": "resolved",
              "updated_at": "2018-06-12T20:41:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
              "violation_data_count": 527
            }
          ],
          "kind": "gov#incident_aggregate",
          "not_modified": "false",
          "org": {
            "id": 1105,
            "name": "RightScale QA"
          },
          "policy_aggregate": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "severity": "low",
          "state": "triggered",
          "updated_at": "2018-06-12T20:41:02Z"
        }
      ]
    },
    "IncidentAggregateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNonCatalogBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNonCatalogBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_non_catalog_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNonCatalogForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNonCatalogInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_non_catalog_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNonCatalogOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate_non_catalog; view=default",
      "type": "object",
      "properties": {
        "action_summary": {
          "$ref": "#/definitions/ActionSummaryResponseBody"
        },
        "count": {
          "type": "integer",
          "description": "The number of incidents across all projects.",
          "example": 30,
          "format": "int64"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident_aggregate.",
          "example": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/non_catalog$"
        },
        "incident_summary": {
          "$ref": "#/definitions/IncidentSummaryResponseBody"
        },
        "items": {
          "$ref": "#/definitions/IncidentAggregateNonCatalogItemResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate_non_catalog\".",
          "example": "gov#incident_aggregate_non_catalog",
          "enum": [
            "gov#incident_aggregate_non_catalog"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "policy_aggregate": {
          "$ref": "#/definitions/PolicyAggregateNonCatalogResponseBodyLink"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident_aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        }
      },
      "description": "show_non_catalogOK_response_body result type (default view)",
      "example": {
        "action_summary": {
          "failed_count": 1,
          "pending_count": 12
        },
        "count": 30,
        "href": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
        "incident_summary": {
          "incident_count": 25,
          "resolved_count": 20,
          "triggered_count": 10,
          "violation_data_count": 527
        },
        "items": [
          {
            "action_failed": false,
            "action_pending": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "id": "507f191e810c19729de860ea",
            "kind": "gov#incident_aggregate_non_catalog_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "updated_at": "2018-06-12T20:41:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "action_pending": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "id": "507f191e810c19729de860ea",
            "kind": "gov#incident_aggregate_non_catalog_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "updated_at": "2018-06-12T20:41:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "action_pending": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "id": "507f191e810c19729de860ea",
            "kind": "gov#incident_aggregate_non_catalog_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "updated_at": "2018-06-12T20:41:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
            "violation_data_count": 527
          }
        ],
        "kind": "gov#incident_aggregate_non_catalog",
        "not_modified": "false",
        "policy_aggregate": {
          "href": "/api/governance/orgs/1105/policy_aggregates/non_catalog",
          "incident_aggregate_href": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
          "kind": "gov#policy_aggregate_non_catalog"
        },
        "updated_at": "2018-06-12T20:41:02Z"
      },
      "required": [
        "kind"
      ]
    },
    "IncidentAggregateShowNonCatalogUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_non_catalog_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentAggregateShowOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_aggregate; view=default",
      "type": "object",
      "properties": {
        "action_summary": {
          "$ref": "#/definitions/ActionSummaryResponseBody"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident_aggregate.",
          "example": "tags"
        },
        "count": {
          "type": "integer",
          "description": "The number of incidents across all projects.",
          "example": 30,
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident_aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident_aggregate should trigger escalation actions.",
          "example": false
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident_aggregate.",
          "example": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident_aggregate, must be unique in the org.",
          "example": "507f191e810c19729de860ea"
        },
        "incident_summary": {
          "$ref": "#/definitions/IncidentSummaryResponseBody"
        },
        "items": {
          "$ref": "#/definitions/IncidentAggregateItemResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_aggregate\".",
          "example": "gov#incident_aggregate",
          "enum": [
            "gov#incident_aggregate"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "org": {
          "$ref": "#/definitions/OrgResponseBody"
        },
        "policy_aggregate": {
          "$ref": "#/definitions/PolicyAggregateResponseBodyLink"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident_aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident_aggregate.",
          "example": "triggered",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident_aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        }
      },
      "description": "ShowOKResponseBody result type (default view)",
      "example": {
        "action_summary": {
          "failed_count": 1,
          "pending_count": 12
        },
        "category": "tags",
        "count": 30,
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
        "id": "507f191e810c19729de860ea",
        "incident_summary": {
          "incident_count": 25,
          "resolved_count": 20,
          "triggered_count": 10,
          "violation_data_count": 527
        },
        "items": [
          {
            "action_failed": false,
            "action_pending": false,
            "created_at": "2018-06-12T20:31:02Z",
            "id": "507f191e810c19729de860ea",
            "kind": "gov#incident_aggregate_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "state": "resolved",
            "updated_at": "2018-06-12T20:41:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "action_pending": false,
            "created_at": "2018-06-12T20:31:02Z",
            "id": "507f191e810c19729de860ea",
            "kind": "gov#incident_aggregate_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "state": "resolved",
            "updated_at": "2018-06-12T20:41:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/incidents/abef04b3",
            "violation_data_count": 527
          }
        ],
        "kind": "gov#incident_aggregate",
        "not_modified": "false",
        "org": {
          "id": 1105,
          "name": "RightScale QA"
        },
        "policy_aggregate": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "id": "5cb88929eeb4030089a44876",
          "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "kind": "gov#policy_aggregate",
          "name": "unattached_volumes",
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "severity": "low",
        "state": "triggered",
        "updated_at": "2018-06-12T20:41:02Z"
      },
      "required": [
        "id",
        "kind"
      ]
    },
    "IncidentAggregateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_escalations_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_escalations_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalations; view=default",
      "type": "object",
      "properties": {
        "escalations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EscalationResponseBody"
          },
          "description": "escalations is the set of escalations.",
          "example": [
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the escalations.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "index_escalations_response_body result type (default view)",
      "example": {
        "escalations": [
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "finished_at": "2018-06-12T28:45:02Z",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "IncidentIndexEscalationsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_escalations_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of incidents in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/IncidentResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_list\".",
          "example": "gov#incident_list",
          "enum": [
            "gov#incident_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
            "id": "507f191e810c19729de860ea",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
              "id": "5cb5331aeeb4030089a446f0",
              "incident_aggregate_id": "507f191e810c19729de860ea",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_aggregate_id": "5cb88929eeb4030089a44876",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
                "id": "5c4a00eb022f3b00886ee986",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
                "id": "5b7f4f04f31b7f0088c5b299",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
            "id": "507f191e810c19729de860ea",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          }
        ],
        "kind": "gov#incident_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "IncidentIndexResolutionsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_resolutions_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_resolutions_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolutions; view=default",
      "type": "object",
      "properties": {
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "resolutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolutionResponseBody"
          },
          "description": "resolutions is the set of resolutions.",
          "example": [
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "approval_request": {
                    "approved_at": "2018-06-12T20:51:02Z",
                    "approved_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "created_at": "2018-06-12T20:31:02Z",
                    "denial_comment": "The volumes need to be backed up.",
                    "denied_at": "2018-06-12T20:51:02Z",
                    "denied_by": {
                      "email": "support@rightscale.com",
                      "id": 7251,
                      "name": "RightScale support"
                    },
                    "description": "Request to delete volumes that are unattached for over 30 days",
                    "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                    "id": "5b36ad26d4c1990070df726a",
                    "kind": "gov#approval_request",
                    "label": "Deletion of Unattached Volumes",
                    "options": [
                      {
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list",
                        "value": [
                          "env:name=staging",
                          "custom:save=true"
                        ]
                      }
                    ],
                    "parameters": {
                      "excluded_tags": {
                        "description": "The list of tags that are excluded when deleting volumes",
                        "index": 1,
                        "label": "Excluded Tags",
                        "name": "excluded_tags",
                        "type": "list"
                      }
                    },
                    "project_id": 60073,
                    "status": "pending",
                    "subject": {
                      "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                      "kind": "gov#incident"
                    },
                    "updated_at": "2018-06-12T20:51:02Z"
                  },
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the resolutions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "index_resolutions_response_body result type (default view)",
      "example": {
        "finished_at": "2018-06-12T28:45:02Z",
        "resolutions": [
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "approval_request": {
                  "approved_at": "2018-06-12T20:51:02Z",
                  "approved_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "created_at": "2018-06-12T20:31:02Z",
                  "denial_comment": "The volumes need to be backed up.",
                  "denied_at": "2018-06-12T20:51:02Z",
                  "denied_by": {
                    "email": "support@rightscale.com",
                    "id": 7251,
                    "name": "RightScale support"
                  },
                  "description": "Request to delete volumes that are unattached for over 30 days",
                  "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                  "id": "5b36ad26d4c1990070df726a",
                  "kind": "gov#approval_request",
                  "label": "Deletion of Unattached Volumes",
                  "options": [
                    {
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list",
                      "value": [
                        "env:name=staging",
                        "custom:save=true"
                      ]
                    }
                  ],
                  "parameters": {
                    "excluded_tags": {
                      "description": "The list of tags that are excluded when deleting volumes",
                      "index": 1,
                      "label": "Excluded Tags",
                      "name": "excluded_tags",
                      "type": "list"
                    }
                  },
                  "project_id": 60073,
                  "status": "pending",
                  "subject": {
                    "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                    "kind": "gov#incident"
                  },
                  "updated_at": "2018-06-12T20:51:02Z"
                },
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "IncidentIndexResolutionsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_resolutions_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_resolutions_unprocessable_entity_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "resolve_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "resolve_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "resolve_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "resolve_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "resolve_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolvePreconditionFailedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "resolve_precondition_failed_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "resolve_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "etag": {
          "type": "string",
          "description": "etag is an HTTP ETag for the incident.",
          "example": "\"d41d8cd98f00b204e9800998ecf8427e\""
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident.",
          "example": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
          "pattern": "^/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "507f191e810c19729de860ea"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if incident is part of an incident aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident\".",
          "example": "gov#incident",
          "enum": [
            "gov#incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "Incident describes an incident raised from an applied policy. (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
        "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
        "id": "507f191e810c19729de860ea",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "kind": "gov#incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind",
        "etag"
      ]
    },
    "IncidentResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IncidentResponseBody"
      },
      "description": "IncidentCollectionResponseBody is the result type for an array of IncidentResponseBody (default view)",
      "example": [
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
          "id": "507f191e810c19729de860ea",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
            "id": "5cb5331aeeb4030089a446f0",
            "incident_aggregate_id": "507f191e810c19729de860ea",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_aggregate_id": "5cb88929eeb4030089a44876",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
          "id": "507f191e810c19729de860ea",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        }
      ]
    },
    "IncidentShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident.",
          "example": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
          "pattern": "^/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "507f191e810c19729de860ea"
        },
        "incident_aggregate_id": {
          "type": "string",
          "description": "incident_aggregate_id is set if incident is part of an incident aggregate.",
          "example": "507f191e810c19729de860ea"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident\".",
          "example": "gov#incident",
          "enum": [
            "gov#incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "ShowOKResponseBody result type (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/5cb5331aeeb4030089a446f0",
          "id": "5cb5331aeeb4030089a446f0",
          "incident_aggregate_id": "507f191e810c19729de860ea",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_aggregate_id": "5cb88929eeb4030089a44876",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "href": "/api/governance/projects/60073/incidents/507f191e810c19729de860ea",
        "id": "507f191e810c19729de860ea",
        "incident_aggregate_id": "507f191e810c19729de860ea",
        "kind": "gov#incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind"
      ]
    },
    "IncidentShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentSummaryResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_summary; view=default",
      "type": "object",
      "properties": {
        "incident_count": {
          "type": "integer",
          "description": "The number of incidents across all projects.",
          "example": 25,
          "format": "int64"
        },
        "resolved_count": {
          "type": "integer",
          "description": "The number of incidents in a resolved state across all projects.",
          "example": 20,
          "format": "int64"
        },
        "triggered_count": {
          "type": "integer",
          "description": "The number of incidents in a triggered state across all projects.",
          "example": 10,
          "format": "int64"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data across all incidents.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "Summary of all incidents for an incident aggregate.",
      "example": {
        "incident_count": 25,
        "resolved_count": 20,
        "triggered_count": 10,
        "violation_data_count": 527
      },
      "required": [
        "incident_count",
        "violation_data_count",
        "resolved_count",
        "triggered_count"
      ]
    },
    "OrgResponseBody": {
      "title": "OrgResponseBody",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id is the Org ID",
          "example": 1105,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name is the organization name",
          "example": "RightScale QA"
        }
      },
      "description": "Org represents a RightScale organization.",
      "example": {
        "id": 1105,
        "name": "RightScale QA"
      },
      "required": [
        "id",
        "name"
      ]
    },
    "PolicyAggregateCreateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateCreateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateCreateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateCreateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateCreateRequestBody": {
      "title": "PolicyAggregateCreateRequestBody",
      "type": "object",
      "properties": {
        "all_projects": {
          "type": "boolean",
          "description": "all_projects is a flag to specify the policy should be run on all projects in the org.",
          "default": false,
          "example": false
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Ut ea incidunt cum.": "Ut impedit amet odit magnam blanditiis perspiciatis."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "default": false,
          "example": false
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "default": "15 minutes",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "name": "cloud_vendor",
              "value": "AWS"
            },
            {
              "name": "email_list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 13071460891083874000,
            "format": "int64"
          },
          "description": "A list of project ids to include in this aggregate.",
          "example": [
            60072,
            60073
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity is the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "default": false,
          "example": false
        },
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the published template that is applied.",
          "example": "/api/governance/orgs/492504/published_templates/a",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "all_projects": false,
        "credentials": {
          "Illo numquam blanditiis.": "Ipsa sed asperiores rerum ut suscipit."
        },
        "description": "Delete unattached volumes after 24 hours.",
        "dry_run": false,
        "frequency": "daily",
        "name": "unattached_volumes",
        "options": [
          {
            "name": "cloud_vendor",
            "value": "AWS"
          },
          {
            "name": "email_list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project_ids": [
          60072,
          60073
        ],
        "severity": "low",
        "skip_approvals": false,
        "template_href": "/api/governance/orgs/399065/published_templates/aff8ea"
      },
      "required": [
        "name",
        "template_href"
      ]
    },
    "PolicyAggregateCreateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateCreateUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_unprocessable_entity_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of policy aggregates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/PolicyAggregateResponseBodyIndexCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate_list\".",
          "example": "gov#policy_aggregate_list",
          "enum": [
            "gov#policy_aggregate_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "active_count": 510,
            "category": "tags",
            "count": 527,
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Aliquam nostrum.": "Sed nobis magni cumque non."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error_count": 17,
            "frequency": "daily",
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "running_project_ids": [
              14623569870852686000,
              10163087240340382000
            ],
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "active_count": 510,
            "category": "tags",
            "count": 527,
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Aliquam nostrum.": "Sed nobis magni cumque non."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error_count": 17,
            "frequency": "daily",
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "running_project_ids": [
              14623569870852686000,
              10163087240340382000
            ],
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "active_count": 510,
            "category": "tags",
            "count": 527,
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Aliquam nostrum.": "Sed nobis magni cumque non."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error_count": 17,
            "frequency": "daily",
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "running_project_ids": [
              14623569870852686000,
              10163087240340382000
            ],
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "active_count": 510,
            "category": "tags",
            "count": 527,
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "credentials": {
              "Aliquam nostrum.": "Sed nobis magni cumque non."
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error_count": 17,
            "frequency": "daily",
            "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
            "id": "5cb88929eeb4030089a44876",
            "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_aggregate",
            "name": "unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "org": {
              "id": 1105,
              "name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
              "id": "5b7f4f04f31b7f0088c5b299",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "running_project_ids": [
              14623569870852686000,
              10163087240340382000
            ],
            "severity": "low",
            "skip_approvals": false,
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          }
        ],
        "kind": "gov#policy_aggregate_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "PolicyAggregateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateItemResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_item; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate_item\".",
          "example": "gov#policy_aggregate_item",
          "enum": [
            "gov#policy_aggregate_item"
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "description": "url of the applied policy.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "http.*/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        }
      },
      "description": "PolicyAggregateItem is a summarized view of a running applied policy. (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "id": "304272",
        "kind": "gov#policy_aggregate_item",
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z",
        "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
      },
      "required": [
        "id",
        "url",
        "kind"
      ]
    },
    "PolicyAggregateItemResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_item; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PolicyAggregateItemResponseBody"
      },
      "description": "PolicyAggregateItemCollectionResponseBody is the result type for an array of PolicyAggregateItemResponseBody (default view)",
      "example": [
        {
          "created_at": "2018-06-12T20:31:02Z",
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "id": "304272",
          "kind": "gov#policy_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
        },
        {
          "created_at": "2018-06-12T20:31:02Z",
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "id": "304272",
          "kind": "gov#policy_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
        },
        {
          "created_at": "2018-06-12T20:31:02Z",
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "id": "304272",
          "kind": "gov#policy_aggregate_item",
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
        }
      ]
    },
    "PolicyAggregateNonCatalogItemResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_non_catalog_item; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy aggregate.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which individual policy evaluations run.",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate_non_catalog_item\".",
          "example": "gov#policy_aggregate_non_catalog_item",
          "enum": [
            "gov#policy_aggregate_non_catalog_item"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the policy aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "url": {
          "type": "string",
          "description": "url of the applied policy.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "http.*/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        }
      },
      "description": "PolicyAggregateNonCatalogItem is a summarized view of a running applied policy. (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "id": "304272",
        "kind": "gov#policy_aggregate_non_catalog_item",
        "name": "unattached_volumes",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "severity": "low",
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z",
        "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
      },
      "required": [
        "id",
        "url",
        "kind"
      ]
    },
    "PolicyAggregateNonCatalogItemResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_non_catalog_item; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PolicyAggregateNonCatalogItemResponseBody"
      },
      "description": "PolicyAggregateNonCatalogItemCollectionResponseBody is the result type for an array of PolicyAggregateNonCatalogItemResponseBody (default view)",
      "example": [
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "id": "304272",
          "kind": "gov#policy_aggregate_non_catalog_item",
          "name": "unattached_volumes",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "severity": "low",
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "id": "304272",
          "kind": "gov#policy_aggregate_non_catalog_item",
          "name": "unattached_volumes",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "severity": "low",
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z",
          "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
        }
      ]
    },
    "PolicyAggregateNonCatalogResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_non_catalog; view=default",
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "href is the href of the policy aggregate.",
          "example": "/api/governance/orgs/1105/policy_aggregates/non_catalog",
          "pattern": "^/api/governance/orgs/[0-9]+/policy_aggregates/non_catalog$"
        },
        "incident_aggregate_href": {
          "type": "string",
          "description": "incident_aggregate_href is the href of the incident aggregate.",
          "example": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/non_catalog$"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate_non_catalog\".",
          "example": "gov#policy_aggregate_non_catalog",
          "enum": [
            "gov#policy_aggregate_non_catalog"
          ]
        }
      },
      "description": "PolicyAggregateNonCatalog is a collection of all other applied policies that are not part of an aggregate. Only applied policies that are applied from the PolicyTemplate endpoint fall into this category. These types of policies shoudl largely be restricted to dev/test policies. (default view)",
      "example": {
        "href": "/api/governance/orgs/1105/policy_aggregates/non_catalog",
        "incident_aggregate_href": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
        "kind": "gov#policy_aggregate_non_catalog"
      },
      "required": [
        "href",
        "kind"
      ]
    },
    "PolicyAggregateResponseBodyIndex": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate; view=default",
      "type": "object",
      "properties": {
        "active_count": {
          "type": "integer",
          "description": "The number of applied policies in an active state.",
          "example": 510,
          "format": "int64"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy aggregate.",
          "example": "tags"
        },
        "count": {
          "type": "integer",
          "description": "The number of applied policies running across all projects.",
          "example": 527,
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Doloremque mollitia vel quaerat.": "Molestiae blanditiis corrupti.",
            "Nam rerum omnis.": "Optio voluptate sint fugiat labore placeat distinctio.",
            "Quis impedit excepturi a non consectetur.": "Dignissimos unde aut qui quod libero dolor."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error_count": {
          "type": "integer",
          "description": "The number of applied policies in an error state.",
          "example": 17,
          "format": "int64"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which individual policy evaluations run.",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy aggregate.",
          "example": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "pattern": "^/api/governance/orgs/[0-9]+/policy_aggregates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an policy aggregate by ID.",
          "example": "5cb88929eeb4030089a44876"
        },
        "incident_aggregate_href": {
          "type": "string",
          "description": "incident_aggregate_href is the href of the incident aggregate.",
          "example": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/[0-9a-f]+$"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate\".",
          "example": "gov#policy_aggregate",
          "enum": [
            "gov#policy_aggregate"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "org": {
          "$ref": "#/definitions/OrgResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "running_project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 11205690583855081000,
            "format": "int64"
          },
          "description": "running_project_ids is a the list of projects the policy aggregate is currently running on.",
          "example": [
            14808225955337062000,
            1455425899842120400,
            4545513157955546600
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the policy aggregate.",
          "example": "active",
          "enum": [
            "active",
            "stopping"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the policy aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "PolicyAggregate describes a policy that is applied across an entire organization. It contains a collection of any number of individual applied policies. (index view) (default view)",
      "example": {
        "active_count": 510,
        "category": "tags",
        "count": 527,
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "credentials": {
          "Ea impedit velit.": "Molestias sed nisi.",
          "Maiores magnam omnis.": "Itaque soluta velit.",
          "Possimus recusandae.": "Voluptas sint atque numquam."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error_count": 17,
        "frequency": "daily",
        "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
        "id": "5cb88929eeb4030089a44876",
        "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_aggregate",
        "name": "unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "org": {
          "id": 1105,
          "name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "running_project_ids": [
          5425509180681317000,
          17058036910708940000,
          5375351925829725000,
          14110128487306270000
        ],
        "severity": "low",
        "skip_approvals": false,
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "PolicyAggregateResponseBodyIndexCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PolicyAggregateResponseBodyIndex"
      },
      "description": "PolicyAggregateResponseBodyIndexCollection is the result type for an array of PolicyAggregateResponseBodyIndex (default view)",
      "example": [
        {
          "active_count": 510,
          "category": "tags",
          "count": 527,
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "credentials": {
            "Consequatur beatae.": "Delectus soluta eveniet qui delectus libero.",
            "Et facere voluptatem doloremque ut quos.": "Quo placeat temporibus autem eius amet."
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error_count": 17,
          "errors": {
            "Corrupti nihil dolore eaque occaecati.": "Quae omnis beatae veritatis numquam autem.",
            "Numquam qui rerum.": "Ea nihil.",
            "Officiis dicta aliquid veritatis.": "Omnis deleniti voluptas consequatur."
          },
          "excluded_project_ids": [
            8475085710104486000,
            221853991610031550
          ],
          "frequency": "daily",
          "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "id": "5cb88929eeb4030089a44876",
          "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "items": [
            {
              "created_at": "2018-06-12T20:31:02Z",
              "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
              "errored_at": "2018-06-12T20:38:02Z",
              "id": "304272",
              "kind": "gov#policy_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "status": "active",
              "updated_at": "2018-06-12T22:31:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
            },
            {
              "created_at": "2018-06-12T20:31:02Z",
              "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
              "errored_at": "2018-06-12T20:38:02Z",
              "id": "304272",
              "kind": "gov#policy_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "status": "active",
              "updated_at": "2018-06-12T22:31:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
            }
          ],
          "kind": "gov#policy_aggregate",
          "name": "unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "org": {
            "id": 1105,
            "name": "RightScale QA"
          },
          "project_ids": [
            11409669065234573000,
            8662260274087284000,
            11004965564351902000,
            5066566823319378000
          ],
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "running_project_ids": [
            1171194646005686300,
            9124735205781133000,
            9971609121980776000,
            14327346507512797000
          ],
          "severity": "low",
          "skip_approvals": false,
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        },
        {
          "active_count": 510,
          "category": "tags",
          "count": 527,
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "credentials": {
            "Consequatur beatae.": "Delectus soluta eveniet qui delectus libero.",
            "Et facere voluptatem doloremque ut quos.": "Quo placeat temporibus autem eius amet."
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error_count": 17,
          "errors": {
            "Corrupti nihil dolore eaque occaecati.": "Quae omnis beatae veritatis numquam autem.",
            "Numquam qui rerum.": "Ea nihil.",
            "Officiis dicta aliquid veritatis.": "Omnis deleniti voluptas consequatur."
          },
          "excluded_project_ids": [
            8475085710104486000,
            221853991610031550
          ],
          "frequency": "daily",
          "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "id": "5cb88929eeb4030089a44876",
          "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "items": [
            {
              "created_at": "2018-06-12T20:31:02Z",
              "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
              "errored_at": "2018-06-12T20:38:02Z",
              "id": "304272",
              "kind": "gov#policy_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "status": "active",
              "updated_at": "2018-06-12T22:31:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
            },
            {
              "created_at": "2018-06-12T20:31:02Z",
              "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
              "errored_at": "2018-06-12T20:38:02Z",
              "id": "304272",
              "kind": "gov#policy_aggregate_item",
              "project": {
                "id": 60073,
                "name": "RightScale Test Account",
                "org_id": 1105,
                "org_name": "RightScale QA"
              },
              "status": "active",
              "updated_at": "2018-06-12T22:31:02Z",
              "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
            }
          ],
          "kind": "gov#policy_aggregate",
          "name": "unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "org": {
            "id": 1105,
            "name": "RightScale QA"
          },
          "project_ids": [
            11409669065234573000,
            8662260274087284000,
            11004965564351902000,
            5066566823319378000
          ],
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "running_project_ids": [
            1171194646005686300,
            9124735205781133000,
            9971609121980776000,
            14327346507512797000
          ],
          "severity": "low",
          "skip_approvals": false,
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        }
      ]
    },
    "PolicyAggregateResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the policy aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy aggregate.",
          "example": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "pattern": "^/api/governance/orgs/[0-9]+/policy_aggregates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an policy aggregate by ID.",
          "example": "5cb88929eeb4030089a44876"
        },
        "incident_aggregate_href": {
          "type": "string",
          "description": "incident_aggregate_href is the href of the incident aggregate.",
          "example": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/[0-9a-f]+$"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate\".",
          "example": "gov#policy_aggregate",
          "enum": [
            "gov#policy_aggregate"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        }
      },
      "description": "PolicyAggregate describes a policy that is applied across an entire organization. It contains a collection of any number of individual applied policies. (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
        "id": "5cb88929eeb4030089a44876",
        "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
        "kind": "gov#policy_aggregate",
        "name": "unattached_volumes",
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "PolicyAggregateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNonCatalogBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNonCatalogBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNonCatalogForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNonCatalogInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_non_catalog_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNonCatalogResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate_non_catalog; view=default",
      "type": "object",
      "properties": {
        "active_count": {
          "type": "integer",
          "description": "The number of applied policies in an active state.",
          "example": 510,
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "description": "The number of applied policies running across all projects.",
          "example": 527,
          "format": "int64"
        },
        "error_count": {
          "type": "integer",
          "description": "The number of applied policies in an error state.",
          "example": 17,
          "format": "int64"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy aggregate.",
          "example": "/api/governance/orgs/1105/policy_aggregates/non_catalog",
          "pattern": "^/api/governance/orgs/[0-9]+/policy_aggregates/non_catalog$"
        },
        "incident_aggregate_href": {
          "type": "string",
          "description": "incident_aggregate_href is the href of the incident aggregate.",
          "example": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/non_catalog$"
        },
        "items": {
          "$ref": "#/definitions/PolicyAggregateNonCatalogItemResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate_non_catalog\".",
          "example": "gov#policy_aggregate_non_catalog",
          "enum": [
            "gov#policy_aggregate_non_catalog"
          ]
        },
        "running_project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 15468808614978193000,
            "format": "int64"
          },
          "description": "running_project_ids is a the list of projects the policy aggregate is currently running on.",
          "example": [
            6759350339400477000,
            8174654489672879000
          ]
        }
      },
      "description": "show_non_catalog_response_body result type (default view)",
      "example": {
        "active_count": 510,
        "count": 527,
        "error_count": 17,
        "href": "/api/governance/orgs/1105/policy_aggregates/non_catalog",
        "incident_aggregate_href": "/api/governance/orgs/1105/incident_aggregates/non_catalog",
        "items": [
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "id": "304272",
            "kind": "gov#policy_aggregate_non_catalog_item",
            "name": "unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "id": "304272",
            "kind": "gov#policy_aggregate_non_catalog_item",
            "name": "unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "id": "304272",
            "kind": "gov#policy_aggregate_non_catalog_item",
            "name": "unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "id": "304272",
            "kind": "gov#policy_aggregate_non_catalog_item",
            "name": "unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
              "id": "5c4a00eb022f3b00886ee986",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          }
        ],
        "kind": "gov#policy_aggregate_non_catalog",
        "running_project_ids": [
          18215447941964618000,
          2049356552365349600
        ]
      },
      "required": [
        "href",
        "kind"
      ]
    },
    "PolicyAggregateShowNonCatalogUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_non_catalog_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_aggregate; view=default",
      "type": "object",
      "properties": {
        "active_count": {
          "type": "integer",
          "description": "The number of applied policies in an active state.",
          "example": 510,
          "format": "int64"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy aggregate.",
          "example": "tags"
        },
        "count": {
          "type": "integer",
          "description": "The number of applied policies running across all projects.",
          "example": 527,
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy aggregate creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name to credential used to launch the policy.",
          "example": {
            "Explicabo dolor quia id possimus.": "Distinctio nobis dolorum unde et."
          },
          "additionalProperties": true
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error_count": {
          "type": "integer",
          "description": "The number of applied policies in an error state.",
          "example": 17,
          "format": "int64"
        },
        "errors": {
          "type": "object",
          "description": "errors captures the errors occurred while applying aggregate to individual projects.",
          "example": {
            "Omnis atque porro nostrum tempora.": "Molestias et eius et adipisci omnis aut.",
            "Perferendis rerum.": "Illum perspiciatis itaque quia.",
            "Qui ipsam.": "Et dolorum."
          },
          "additionalProperties": true
        },
        "excluded_project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 9835659269162934000,
            "format": "int64"
          },
          "description": "excluded_project_ids is a list of projects to exclude form this aggregate.",
          "example": [
            6324545121480413000,
            15568576262303767000,
            12778025959085357000,
            2168303281496324400
          ]
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which individual policy evaluations run.",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy aggregate.",
          "example": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
          "pattern": "^/api/governance/orgs/[0-9]+/policy_aggregates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an policy aggregate by ID.",
          "example": "5cb88929eeb4030089a44876"
        },
        "incident_aggregate_href": {
          "type": "string",
          "description": "incident_aggregate_href is the href of the incident aggregate.",
          "example": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
          "pattern": "^/api/governance/orgs/[0-9]+/incident_aggregates/[0-9a-f]+$"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "items": {
          "$ref": "#/definitions/PolicyAggregateItemResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_aggregate\".",
          "example": "gov#policy_aggregate",
          "enum": [
            "gov#policy_aggregate"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "org": {
          "$ref": "#/definitions/OrgResponseBody"
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 16851442307171312000,
            "format": "int64"
          },
          "description": "project_ids is a the list of projects in this aggregate. If empty, applies to all projects, minus excluded projects",
          "example": [
            955062530405127300,
            10598978588988502000
          ]
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "running_project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 7578558130391015000,
            "format": "int64"
          },
          "description": "running_project_ids is a the list of projects the policy aggregate is currently running on.",
          "example": [
            10546953122366750000,
            308319852269871940
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy aggregate.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the policy aggregate.",
          "example": "active",
          "enum": [
            "active",
            "stopping"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the policy aggregate update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "active_count": 510,
        "category": "tags",
        "count": 527,
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "credentials": {
          "Ducimus ut ipsa laborum.": "Sunt est aut aut aliquid.",
          "In dicta.": "Provident molestiae harum.",
          "Mollitia assumenda nihil sit reprehenderit id.": "Labore placeat ut ut harum officiis."
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error_count": 17,
        "errors": {
          "Eligendi illum doloremque.": "Officia nostrum laudantium eaque ad."
        },
        "excluded_project_ids": [
          7199374252224476000,
          8994367820538745000
        ],
        "frequency": "daily",
        "href": "/api/governance/orgs/60073/policy_aggregates/5cb88929eeb4030089a44876",
        "id": "5cb88929eeb4030089a44876",
        "incident_aggregate_href": "/api/governance/orgs/60073/incident_aggregates/507f191e810c19729de860ea",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "items": [
          {
            "created_at": "2018-06-12T20:31:02Z",
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "id": "304272",
            "kind": "gov#policy_aggregate_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          },
          {
            "created_at": "2018-06-12T20:31:02Z",
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "id": "304272",
            "kind": "gov#policy_aggregate_item",
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z",
            "url": "https://governance-3.rightscale.com/api/governance/projects/60073/applied_policies/abef04b3"
          }
        ],
        "kind": "gov#policy_aggregate",
        "name": "unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "org": {
          "id": 1105,
          "name": "RightScale QA"
        },
        "project_ids": [
          16652301309661512000,
          10783761429418148000,
          11267230780629733000,
          12226945469098236000
        ],
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "running_project_ids": [
          12038528970123104000,
          2459213459862358000
        ],
        "severity": "low",
        "skip_approvals": false,
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "PolicyAggregateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyAggregateUpdateRequestBody": {
      "title": "PolicyAggregateUpdateRequestBody",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "excluded_project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 1908751089340915500,
            "format": "int64"
          },
          "description": "excluded_project_ids is a list of project ids to exclude from this aggregate.",
          "example": [
            60073
          ]
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "name": "cloud_vendor",
              "value": "AWS"
            },
            {
              "name": "email_list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "example": 10192842531463758000,
            "format": "int64"
          },
          "description": "project_ids is a the list of projects in this aggregate. If empty, applies to all projects, minus excluded projects",
          "example": [
            60072
          ]
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "skip_approvals": {
          "type": "boolean",
          "description": "skip_approvals means that any approval actions will be skipped and all actions automatically run.",
          "example": false
        }
      },
      "example": {
        "description": "Delete unattached volumes after 24 hours.",
        "dry_run": false,
        "excluded_project_ids": [
          60073
        ],
        "frequency": "daily",
        "name": "unattached_volumes",
        "options": [
          {
            "name": "cloud_vendor",
            "value": "AWS"
          },
          {
            "name": "email_list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project_ids": [
          60072
        ],
        "severity": "low",
        "skip_approvals": false
      }
    },
    "PolicyAggregateUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "compile_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "compile_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "compile_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "compile_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "compile_invalid_template_response_body result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateCompileRequestBody": {
      "title": "PolicyTemplateCompileRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "file.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "file.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateCompileUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "compile_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of policy templates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template_list\".",
          "example": "gov#policy_template_list",
          "enum": [
            "gov#policy_template_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "default_frequency": "15 minutes",
            "doc_link": "https://rightscale.com",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "tenancy": "multi",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "default_frequency": "15 minutes",
            "doc_link": "https://rightscale.com",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "tenancy": "multi",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "default_frequency": "15 minutes",
            "doc_link": "https://rightscale.com",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
            "id": "5c4a00eb022f3b00886ee986",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "tenancy": "multi",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        ],
        "kind": "gov#policy_template_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "PolicyTemplateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "5c4a00eb022f3b00886ee986"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Ab ex nostrum sed voluptatem eos."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PolicyTemplate describes a previously uploaded policy template. (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
        "id": "5c4a00eb022f3b00886ee986",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PolicyTemplateResponseBody"
      },
      "description": "PolicyTemplateCollectionResponseBody is the result type for an array of PolicyTemplateResponseBody (default view)",
      "example": [
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "id": "5c4a00eb022f3b00886ee986",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      ]
    },
    "PolicyTemplateResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "5c4a00eb022f3b00886ee986"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PolicyTemplate describes a previously uploaded policy template. (default view)",
      "example": {
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
        "id": "5c4a00eb022f3b00886ee986",
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateRetrieveDataBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "retrieve_data_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateRetrieveDataBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "retrieve_data_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateRetrieveDataForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "retrieve_data_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateRetrieveDataInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "retrieve_data_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateRetrieveDataRequestBody": {
      "title": "PolicyTemplateRetrieveDataRequestBody",
      "type": "object",
      "properties": {
        "credentials": {
          "type": "object",
          "description": "credentials is the map of name and credential used to launch the policy.",
          "example": {
            "Alias natus ad qui repellendus.": "Amet et aspernatur necessitatibus perspiciatis assumenda at."
          },
          "additionalProperties": true
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Eveniet temporibus inventore."
          },
          "description": "names is a filter to only retrieve datasources or resources that match the given names",
          "example": [
            "azure_resources"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options lists the configuration options used to parameterize the policy.",
          "example": [
            {
              "name": "cloud_vendor",
              "value": "AWS"
            },
            {
              "name": "email_list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        }
      },
      "example": {
        "credentials": {
          "Eos dolorum.": "Ipsam soluta sunt repudiandae.",
          "Sapiente quisquam odit.": "Odit veniam dolor accusantium cumque minus."
        },
        "names": [
          "azure_resources"
        ],
        "options": [
          {
            "name": "cloud_vendor",
            "value": "AWS"
          },
          {
            "name": "email_list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ]
      }
    },
    "PolicyTemplateRetrieveDataUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "retrieve_data_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateRetrieveDataUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "retrieve_data_unprocessable_entity_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "5c4a00eb022f3b00886ee986"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Sit alias et illum consectetur harum libero."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
        "id": "5c4a00eb022f3b00886ee986",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "update_invalid_template_response_body result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateUpdateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateRequestBody": {
      "title": "PolicyTemplateUpdateRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "tag_checker.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "tag_checker.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateUpdateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "5c4a00eb022f3b00886ee986"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Omnis voluptas."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "UpdateResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
        "id": "5c4a00eb022f3b00886ee986",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "upload_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "upload_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadConflictResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.conflict_error; view=default",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "a unique identifier for this particular occurrence of the problem.",
          "example": "Necessitatibus sed ut nihil reiciendis."
        },
        "name": {
          "type": "string",
          "description": "name of error.",
          "example": "conflict",
          "enum": [
            "conflict"
          ]
        },
        "updatable": {
          "type": "boolean",
          "description": "updatable indicates whether a 'create' request error can be resolved by making an 'update' request instead. It is used to indicate whether a resource is built-in and whether the user has permission to modify it.",
          "example": false
        }
      },
      "description": "upload_conflict_response_body result type (default view)",
      "example": {
        "id": "Rerum laborum ipsum voluptate mollitia ducimus error.",
        "name": "conflict",
        "updatable": true
      },
      "required": [
        "id",
        "name",
        "updatable"
      ]
    },
    "PolicyTemplateUploadForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "upload_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "upload_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "upload_invalid_template_response_body result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateUploadRequestBody": {
      "title": "PolicyTemplateUploadRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "file.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "file.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateUploadResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "5c4a00eb022f3b00886ee986"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "At nostrum quidem voluptas."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "UploadResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/5c4a00eb022f3b00886ee986",
        "id": "5c4a00eb022f3b00886ee986",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateUploadUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "upload_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ProjectResponseBody": {
      "title": "ProjectResponseBody",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id is the Project ID",
          "example": 60073,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name is the Project Name",
          "example": "RightScale Test Account"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the RightScale Organization ID",
          "example": 1105,
          "format": "int64"
        },
        "org_name": {
          "type": "string",
          "description": "org_name is the RightScale Organization Name",
          "example": "RightScale QA"
        }
      },
      "description": "Project represents a RightScale project and provides some information about the project.",
      "example": {
        "id": 60073,
        "name": "RightScale Test Account",
        "org_id": 1105,
        "org_name": "RightScale QA"
      },
      "required": [
        "id",
        "name",
        "org_id",
        "org_name"
      ]
    },
    "PublishedTemplateCreateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateConflictResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.conflict_error; view=default",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "a unique identifier for this particular occurrence of the problem.",
          "example": "Quia qui voluptatem modi."
        },
        "name": {
          "type": "string",
          "description": "name of error.",
          "example": "conflict",
          "enum": [
            "conflict"
          ]
        },
        "updatable": {
          "type": "boolean",
          "description": "updatable indicates whether a 'create' request error can be resolved by making an 'update' request instead. It is used to indicate whether a resource is built-in and whether the user has permission to modify it.",
          "example": true
        }
      },
      "description": "create_conflict_response_body result type (default view)",
      "example": {
        "id": "Eos molestias voluptate assumenda fugit.",
        "name": "conflict",
        "updatable": false
      },
      "required": [
        "id",
        "name",
        "updatable"
      ]
    },
    "PublishedTemplateCreateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "create_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateRequestBody": {
      "title": "PublishedTemplateCreateRequestBody",
      "type": "object",
      "properties": {
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template to publish to the organization.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "template_href"
      ]
    },
    "PublishedTemplateCreateResponseBody": {
      "title": "PublishedTemplateCreateResponseBody",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "example": "Ut ab aut ab qui."
        }
      },
      "example": {
        "location": "Officiis molestiae."
      },
      "required": [
        "location"
      ]
    },
    "PublishedTemplateCreateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "create_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_forbidden_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "delete_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "delete_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "hide_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "hide_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "hide_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "hide_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "hide_not_found_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "hide_unauthorized_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "index_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_bad_request_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of published templates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template_list\".",
          "example": "gov#published_template_list",
          "enum": [
            "gov#published_template_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "built_in": false,
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "default_frequency": "15 minutes",
            "doc_link": "https://rightscale.com",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "hidden": false,
            "hidden_at": "2018-06-12T20:51:02Z",
            "hidden_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "org_id": 1105,
            "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
            "policy_template_id": "5b3291a5073d78004fcf5bdc",
            "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "tenancy": "multi",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "built_in": false,
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "default_frequency": "15 minutes",
            "doc_link": "https://rightscale.com",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "hidden": false,
            "hidden_at": "2018-06-12T20:51:02Z",
            "hidden_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
            "id": "5b7f4f04f31b7f0088c5b299",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "org_id": 1105,
            "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
            "policy_template_id": "5b3291a5073d78004fcf5bdc",
            "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "tenancy": "multi",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        ],
        "kind": "gov#published_template_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "PublishedTemplateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "index_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the published template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the published template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "hidden": {
          "type": "boolean",
          "description": "hidden is a flag to indicate whether the published template is hidden.",
          "example": false
        },
        "hidden_at": {
          "type": "string",
          "description": "hidden_at is the hidden at timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "hidden_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "5b7f4f04f31b7f0088c5b299"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the ID of the organization that the published template belongs to.",
          "example": 1105,
          "format": "int64"
        },
        "policy_template_fingerprint": {
          "type": "string",
          "description": "policy_template_fingerprint is fingerprint of the policy template. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079"
        },
        "policy_template_id": {
          "type": "string",
          "description": "policy_template_id is the ID of the policy template from which the published template originated.",
          "example": "5b3291a5073d78004fcf5bdc"
        },
        "policy_template_url": {
          "type": "string",
          "description": "policy_template_url is the full URL to the policy template from which the published template originated.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "format": "uri"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the published template is published from.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Quia voluptas reiciendis."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this published template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the published template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PublishedTemplate describes a previously created published template. (default view)",
      "example": {
        "built_in": false,
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "hidden": false,
        "hidden_at": "2018-06-12T20:51:02Z",
        "hidden_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
        "id": "5b7f4f04f31b7f0088c5b299",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "org_id": 1105,
        "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
        "policy_template_id": "5b3291a5073d78004fcf5bdc",
        "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PublishedTemplateResponseBody"
      },
      "description": "PublishedTemplateCollectionResponseBody is the result type for an array of PublishedTemplateResponseBody (default view)",
      "example": [
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "org_id": 1105,
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "default_frequency": "15 minutes",
          "doc_link": "https://rightscale.com",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "id": "5b7f4f04f31b7f0088c5b299",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "org_id": 1105,
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "tenancy": "multi",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      ]
    },
    "PublishedTemplateResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "5b7f4f04f31b7f0088c5b299"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PublishedTemplate describes a previously created published template. (default view)",
      "example": {
        "built_in": false,
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
        "id": "5b7f4f04f31b7f0088c5b299",
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "show_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the published template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the published template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "default_frequency": {
          "type": "string",
          "description": "default_frequency defines the interval the template will be run unless set differently during application.",
          "example": "15 minutes",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly",
            "monthly"
          ]
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "hidden": {
          "type": "boolean",
          "description": "hidden is a flag to indicate whether the published template is hidden.",
          "example": false
        },
        "hidden_at": {
          "type": "string",
          "description": "hidden_at is the hidden at timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "hidden_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "5b7f4f04f31b7f0088c5b299"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the ID of the organization that the published template belongs to.",
          "example": 1105,
          "format": "int64"
        },
        "policy_template_fingerprint": {
          "type": "string",
          "description": "policy_template_fingerprint is fingerprint of the policy template. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079"
        },
        "policy_template_id": {
          "type": "string",
          "description": "policy_template_id is the ID of the policy template from which the published template originated.",
          "example": "5b3291a5073d78004fcf5bdc"
        },
        "policy_template_url": {
          "type": "string",
          "description": "policy_template_url is the full URL to the policy template from which the published template originated.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "format": "uri"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the published template is published from.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Praesentium enim quasi quam ad."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this published template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the published template.",
          "example": "Checks for ports that are open in instances"
        },
        "tenancy": {
          "type": "string",
          "description": "tenancy indicates whether this template can be run across multiple projects or is restricted to a single project.",
          "example": "multi",
          "enum": [
            "multi",
            "single"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "built_in": false,
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "default_frequency": "15 minutes",
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "hidden": false,
        "hidden_at": "2018-06-12T20:51:02Z",
        "hidden_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "href": "/api/governance/projects/60073/published_templates/5b7f4f04f31b7f0088c5b299",
        "id": "5b7f4f04f31b7f0088c5b299",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "org_id": 1105,
        "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
        "policy_template_id": "5b3291a5073d78004fcf5bdc",
        "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "tenancy": "multi",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "show_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "unhide_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "unhide_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "unhide_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "unhide_internal_error_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "unhide_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "unhide_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_bad_gateway_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_bad_request_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_forbidden_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_internal_error_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "update_not_found_response_body result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateRequestBody": {
      "title": "PublishedTemplateUpdateRequestBody",
      "type": "object",
      "properties": {
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template to publish to the organization.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "template_href"
      ]
    },
    "PublishedTemplateUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "update_unauthorized_response_body result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ResolutionActionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolution_action; view=default",
      "type": "object",
      "properties": {
        "approval_request": {
          "$ref": "#/definitions/ApprovalRequestResponseBodyExtended"
        },
        "error": {
          "type": "string",
          "description": "error is any error occurred when handling the action.",
          "example": "failed to create cloud workflow process: definition foo not found"
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the action was finished.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "process_href": {
          "type": "string",
          "description": "process_href is the href of a cloud workflow process. Required if the type is cloud_workflow.",
          "example": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the action was started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the action.",
          "example": "running",
          "enum": [
            "queued",
            "pending",
            "running",
            "completed",
            "skipped",
            "failed",
            "approved",
            "denied"
          ]
        },
        "type": {
          "type": "string",
          "description": "type is the type of the action.",
          "example": "email",
          "enum": [
            "email",
            "cloud_workflow",
            "request_approval"
          ]
        }
      },
      "description": "ResolutionAction holds the status of a single action in a resolution.",
      "example": {
        "approval_request": {
          "approved_at": "2018-06-12T20:51:02Z",
          "approved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "created_at": "2018-06-12T20:31:02Z",
          "denial_comment": "The volumes need to be backed up.",
          "denied_at": "2018-06-12T20:51:02Z",
          "denied_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Request to delete volumes that are unattached for over 30 days",
          "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
          "id": "5b36ad26d4c1990070df726a",
          "kind": "gov#approval_request",
          "label": "Deletion of Unattached Volumes",
          "options": [
            {
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list",
              "value": [
                "env:name=staging",
                "custom:save=true"
              ]
            }
          ],
          "parameters": {
            "excluded_tags": {
              "description": "The list of tags that are excluded when deleting volumes",
              "index": 1,
              "label": "Excluded Tags",
              "name": "excluded_tags",
              "type": "list"
            }
          },
          "project_id": 60073,
          "status": "pending",
          "subject": {
            "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
            "kind": "gov#incident"
          },
          "updated_at": "2018-06-12T20:51:02Z"
        },
        "error": "failed to create cloud workflow process: definition foo not found",
        "finished_at": "2018-06-12T22:31:02Z",
        "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running",
        "type": "email"
      },
      "required": [
        "type",
        "status"
      ]
    },
    "ResolutionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolution; view=default",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolutionActionResponseBody"
          },
          "description": "actions is the list of individual actions.",
          "example": [
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "approval_request": {
                "approved_at": "2018-06-12T20:51:02Z",
                "approved_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "created_at": "2018-06-12T20:31:02Z",
                "denial_comment": "The volumes need to be backed up.",
                "denied_at": "2018-06-12T20:51:02Z",
                "denied_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                },
                "description": "Request to delete volumes that are unattached for over 30 days",
                "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
                "id": "5b36ad26d4c1990070df726a",
                "kind": "gov#approval_request",
                "label": "Deletion of Unattached Volumes",
                "options": [
                  {
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list",
                    "value": [
                      "env:name=staging",
                      "custom:save=true"
                    ]
                  }
                ],
                "parameters": {
                  "excluded_tags": {
                    "description": "The list of tags that are excluded when deleting volumes",
                    "index": 1,
                    "label": "Excluded Tags",
                    "name": "excluded_tags",
                    "type": "list"
                  }
                },
                "project_id": 60073,
                "status": "pending",
                "subject": {
                  "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                  "kind": "gov#incident"
                },
                "updated_at": "2018-06-12T20:51:02Z"
              },
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the name of the resolution.",
          "example": "send_email"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the set of resolution actions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "pending",
            "running",
            "completed",
            "failed",
            "denied"
          ]
        }
      },
      "description": "Resolution holds the status of one or more actions of a resolution.",
      "example": {
        "actions": [
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "approval_request": {
              "approved_at": "2018-06-12T20:51:02Z",
              "approved_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "created_at": "2018-06-12T20:31:02Z",
              "denial_comment": "The volumes need to be backed up.",
              "denied_at": "2018-06-12T20:51:02Z",
              "denied_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "description": "Request to delete volumes that are unattached for over 30 days",
              "href": "/api/governance/projects/60073/approval_requests/5b36ad26d4c1990070df726a",
              "id": "5b36ad26d4c1990070df726a",
              "kind": "gov#approval_request",
              "label": "Deletion of Unattached Volumes",
              "options": [
                {
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list",
                  "value": [
                    "env:name=staging",
                    "custom:save=true"
                  ]
                }
              ],
              "parameters": {
                "excluded_tags": {
                  "description": "The list of tags that are excluded when deleting volumes",
                  "index": 1,
                  "label": "Excluded Tags",
                  "name": "excluded_tags",
                  "type": "list"
                }
              },
              "project_id": 60073,
              "status": "pending",
              "subject": {
                "href": "/api/governance/projects/60073/incidents/5b36ad26d4c1990070df726a",
                "kind": "gov#incident"
              },
              "updated_at": "2018-06-12T20:51:02Z"
            },
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "process_href": "https://cloud-workflow.rightscale.com/cwf/v1/accounts/60073/processes/abc123",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          }
        ],
        "name": "send_email",
        "status": "running"
      },
      "required": [
        "status",
        "name",
        "actions"
      ]
    },
    "UserResponseBody": {
      "title": "UserResponseBody",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "email of user",
          "example": "support@rightscale.com",
          "format": "email"
        },
        "id": {
          "type": "integer",
          "description": "ID of user",
          "example": 7251,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name of user, usually of the form 'First Last'",
          "example": "RightScale support"
        }
      },
      "description": "User represents a registered RightScale user.",
      "example": {
        "email": "support@rightscale.com",
        "id": 7251,
        "name": "RightScale support"
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "securityDefinitions": {
    "GlobalSession_header_Authorization": {
      "type": "apiKey",
      "description": "Secures endpoint by requiring a valid JWT token retrieved via user credentials.\n\n**Security Scopes**:\n  * `governance:policy_template:compile||common:project:own||common:org:own`: Allows compiling policy templates\n  * `governance:policy_template:upload||common:project:own||common:org:own`: Allows uploading policy templates\n  * `governance:policy_template:update||common:project:own||common:org:own`: Allows updating policy templates\n  * `governance:policy_template:delete||common:project:own||common:org:own`: Allows deleting policy templates\n  * `governance:policy_template:show||common:project:own||common:org:own`: Allows showing policy templates\n  * `governance:policy_template:index||common:project:own||common:org:own`: Allows indexing policy templates\n  * `governance:policy_template:retrieve_data||common:project:own||common:org:own`: Allows for retrieving datasources from policy template\n  * `governance:published_template:create||common:org:own`: Allows creating published templates\n  * `governance:published_template:update||common:org:own`: Allows updating published templates\n  * `governance:published_template:hide||common:org:own`: Allows updating published templates\n  * `governance:published_template:unhide||common:org:own`: Allows updating published templates\n  * `governance:published_template:delete||common:org:own`: Allows updating published templates\n  * `governance:published_template:show||common:org:own`: Allows showing published templates\n  * `governance:published_template:index||common:org:own`: Allows indexing published templates\n  * `governance:applied_policy:create||common:project:own||common:org:own`: Allows creating applied policies\n  * `governance:applied_policy:delete||common:project:own||common:org:own`: Allows updating applied policies\n  * `governance:applied_policy:show||common:project:own||common:org:own`: Allows showing applied policies\n  * `governance:applied_policy:show_log||common:project:own||common:org:own`: Allows showing applied policy logs\n  * `governance:applied_policy:index||common:project:own||common:org:own`: Allows indexing applied policies\n  * `governance:applied_policy:evaluate||common:project:own||common:org:own`: Allows evaluating applied policies on demand\n  * `governance:applied_policy:update||common:project:own||common:org:own`: Allows updating applied policies\n  * `governance:policy_aggregate:create||common:org:own`: Allows creating policy aggregates\n  * `governance:policy_aggregate:update||common:org:own`: Allows updating policy aggregates\n  * `governance:policy_aggregate:delete||common:org:own`: Allows updating policy aggregates\n  * `governance:policy_aggregate:show||common:org:own`: Allows showing policy aggregates\n  * `governance:policy_aggregate:index||common:org:own`: Allows indexing policy aggregates\n  * `governance:incident:resolve||common:project:own||common:org:own`: Allows resolving incidents\n  * `governance:incident:show||common:project:own||common:org:own`: Allows showing incidents\n  * `governance:incident:index||common:project:own||common:org:own`: Allows indexing incidents\n  * `governance:archived_incident:show||common:project:own||common:org:own`: Allows showing archived incidents\n  * `governance:archived_incident:index||common:project:own||common:org:own`: Allows indexing archived incidents\n  * `governance:incident_aggregate:show||common:org:own`: Allows showing incident aggregates\n  * `governance:incident_aggregate:index||common:org:own`: Allows indexing incident aggregates\n  * `governance:approval_request:show||common:project:own||common:org:own`: Allows showing approval request\n  * `governance:approval_request:index||common:project:own||common:org:own`: Allows indexing approval requests\n  * `governance:approval_request:approve||common:project:own||common:org:own`: Allows approving an approval request\n  * `governance:approval_request:deny||common:project:own||common:org:own`: Allows denying an approval request",
      "name": "Authorization",
      "in": "header"
    }
  }
}
